<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='fao_trade_matrix (capstone_envirolytics.fao_trade_matrix) (postgres)' inline='true' name='federated.1oao44206i063g19f2gvs0yh81pg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' name='postgres.1hdap0z1up7dy91al6s5z1lhafaf'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' username='margaritakostina' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1hdap0z1up7dy91al6s5z1lhafaf' name='fao_trade_matrix' table='[capstone_envirolytics].[fao_trade_matrix]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1hdap0z1up7dy91al6s5z1lhafaf' name='fao_trade_matrix' table='[capstone_envirolytics].[fao_trade_matrix]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>reporting_country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[reporting_country]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>reporting_country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>partner_country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[partner_country]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>partner_country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[item_code]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>item_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[item]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>item</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>export_quantity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[export_quantity]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>export_quantity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>export_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[export_value]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>export_value</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>import_quantity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[import_quantity]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>import_quantity</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>import_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[import_value]</local-name>
            <parent-name>[fao_trade_matrix]</parent-name>
            <remote-alias>import_value</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='fao_trade_matrix' datatype='table' name='[__tableau_internal_object_id__].[fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967]' role='measure' type='quantitative' />
      <column caption='Export Quantity' datatype='real' name='[export_quantity]' role='measure' type='quantitative' />
      <column caption='Export Value' datatype='real' name='[export_value]' role='measure' type='quantitative' />
      <column caption='Import Quantity' datatype='real' name='[import_quantity]' role='measure' type='quantitative' />
      <column caption='Import Value' datatype='real' name='[import_value]' role='measure' type='quantitative' />
      <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
      <column caption='Item Code' datatype='integer' name='[item_code]' role='dimension' type='ordinal' />
      <column caption='Partner Country' datatype='string' name='[partner_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Reporting Country' datatype='string' name='[reporting_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='fao_trade_matrix' id='fao_trade_matrix (capstone_envirolytics.fao_trade_matrix)_F7ED10638A66425BB1A4E4B39D160967'>
            <properties context=''>
              <relation connection='postgres.1hdap0z1up7dy91al6s5z1lhafaf' name='fao_trade_matrix' table='[capstone_envirolytics].[fao_trade_matrix]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' inline='true' name='federated.0gmzic2022xdk610vqg5706mizs8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' name='postgres.0cuyklc14b6o3k1bfibco0rodauh'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' username='margaritakostina' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0cuyklc14b6o3k1bfibco0rodauh' name='production_and_emissions' table='[capstone_envirolytics].[production_and_emissions]' type='table'>
          <columns>
            <column datatype='datetime' date-parse-format='yyyy' name='year' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.0cuyklc14b6o3k1bfibco0rodauh' name='production_and_emissions' table='[capstone_envirolytics].[production_and_emissions]' type='table'>
          <columns>
            <column datatype='datetime' date-parse-format='yyyy' name='year' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area_group]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>area_group</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[item]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>item</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[item_code]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>item_code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[item_group]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>item_group</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item_category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[item_category]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>item_category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_harvested_in_ha</remote-name>
            <remote-type>5</remote-type>
            <local-name>[area_harvested_in_ha]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>area_harvested_in_ha</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stocks_in_an</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stocks_in_an]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>stocks_in_an</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>producing_animals_slaughtered_in_an</remote-name>
            <remote-type>5</remote-type>
            <local-name>[producing_animals_slaughtered_in_an]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>producing_animals_slaughtered_in_an</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>egg_or_milk_animals_in_an</remote-name>
            <remote-type>5</remote-type>
            <local-name>[egg_or_milk_animals_in_an]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>egg_or_milk_animals_in_an</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>production_in_t</remote-name>
            <remote-type>5</remote-type>
            <local-name>[production_in_t]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>production_in_t</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yield</remote-name>
            <remote-type>5</remote-type>
            <local-name>[yield]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>yield</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yield_unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[yield_unit]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>yield_unit</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_ch4_in_kt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[emissions_ch4_in_kt]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_ch4_in_kt</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_n2o_in_kt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[emissions_n2o_in_kt]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_n2o_in_kt</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_co2eq_calc_in_kt</remote-name>
            <remote-type>131</remote-type>
            <local-name>[emissions_co2eq_calc_in_kt]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_co2eq_calc_in_kt</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_intensity_calc_in_kg_co2eq_per_kg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[emissions_intensity_calc_in_kg_co2eq_per_kg]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_intensity_calc_in_kg_co2eq_per_kg</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_emissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_emissions]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>source_emissions</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_co2eq_in_kt</remote-name>
            <remote-type>131</remote-type>
            <local-name>[emissions_co2eq_in_kt]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_co2eq_in_kt</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_intensity_in_kg_co2eq_per_kg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[emissions_intensity_in_kg_co2eq_per_kg]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_intensity_in_kg_co2eq_per_kg</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>production_emissions_in_t</remote-name>
            <remote-type>5</remote-type>
            <local-name>[production_emissions_in_t]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>production_emissions_in_t</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_intensity_combined_in_kg_co2eq_per_kg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[emissions_intensity_combined_in_kg_co2eq_per_kg]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_intensity_combined_in_kg_co2eq_per_kg</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emissions_co2eq_combined_in_kt</remote-name>
            <remote-type>131</remote-type>
            <local-name>[emissions_co2eq_combined_in_kt]</local-name>
            <parent-name>[production_and_emissions]</parent-name>
            <remote-alias>emissions_co2eq_combined_in_kt</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Production, tonnes per capita' datatype='real' name='[Calculation_590816019423174656]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[production_in_t]/[population]' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_972425720108068864]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Emissions Combined CO2Eq in Kt' datatype='real' name='[Calculation_972425720154873863]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[emissions_co2eq_calc_in_kt]+[emissions_co2eq_in_kt]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='production_and_emissions' datatype='table' name='[__tableau_internal_object_id__].[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
          <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
          <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
          <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
          <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
        </semantic-values>
      </column>
      <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
      <column caption='Area Harvested In Ha' datatype='real' name='[area_harvested_in_ha]' role='measure' type='quantitative' />
      <column caption='Egg Or Milk Animals In An' datatype='real' name='[egg_or_milk_animals_in_an]' role='measure' type='quantitative' />
      <column caption='Emissions Ch4 In Kt' datatype='real' name='[emissions_ch4_in_kt]' role='measure' type='quantitative' />
      <column caption='Emissions Co2Eq Calc In Kt' datatype='real' name='[emissions_co2eq_calc_in_kt]' role='measure' type='quantitative' />
      <column caption='Emissions Co2Eq In Kt' datatype='real' name='[emissions_co2eq_in_kt]' role='measure' type='quantitative' />
      <column caption='Emissions Intensity Calc In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_calc_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
      <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
      <column caption='Emissions Intensity In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
      <column caption='Emissions N2O In Kt' datatype='real' name='[emissions_n2o_in_kt]' role='measure' type='quantitative' />
      <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
      <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
      <column caption='Item Code' datatype='integer' name='[item_code]' role='dimension' type='ordinal' />
      <column caption='Item Group' datatype='string' name='[item_group]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Producing Animals Slaughtered In An' datatype='real' name='[producing_animals_slaughtered_in_an]' role='measure' type='quantitative' />
      <column caption='Production Emissions In T' datatype='real' name='[production_emissions_in_t]' role='measure' type='quantitative' />
      <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
      <column caption='Source Emissions' datatype='string' name='[source_emissions]' role='dimension' type='nominal' />
      <column caption='Stocks In An' datatype='real' name='[stocks_in_an]' role='measure' type='quantitative' />
      <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
      <column caption='Yield' datatype='real' name='[yield]' role='measure' type='quantitative' />
      <column caption='Yield Unit' datatype='string' name='[yield_unit]' role='dimension' type='nominal' />
      <column-instance column='[emissions_ch4_in_kt]' derivation='Avg' name='[avg:emissions_ch4_in_kt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[production_in_t]' derivation='Avg' name='[avg:production_in_t:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Items with known emissions]' derivation='InOut' name='[io:Items with known emissions:nk]' pivot='key' type='nominal' />
      <column-instance column='[emissions_intensity_in_kg_co2eq_per_kg]' derivation='Median' name='[med:emissions_intensity_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[production_in_t]' derivation='Median' name='[med:production_in_t:qk]' pivot='key' type='quantitative' />
      <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
      <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
      <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
      <column-instance column='[production_in_t]' derivation='Median' name='[pcto:med:production_in_t:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[production_in_t]' derivation='Sum' name='[pcto:sum:production_in_t:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[production_in_t]' derivation='Sum' name='[pcto:sum:production_in_t:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[emissions_ch4_in_kt]' derivation='Sum' name='[sum:emissions_ch4_in_kt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[emissions_co2eq_calc_in_kt]' derivation='Sum' name='[sum:emissions_co2eq_calc_in_kt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[emissions_co2eq_in_kt]' derivation='Sum' name='[sum:emissions_co2eq_in_kt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[emissions_intensity_in_kg_co2eq_per_kg]' derivation='Sum' name='[sum:emissions_intensity_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[emissions_n2o_in_kt]' derivation='Sum' name='[sum:emissions_n2o_in_kt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
      <group caption='Items with known emissions' name='[Items with known emissions]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[item]' member='&quot;Barley&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Beans, dry&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Hen eggs in shell, fresh&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Maize (corn)&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Meat of buffalo, fresh or chilled&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Meat of cattle with the bone, fresh or chilled&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Meat of chickens, fresh or chilled&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Meat of goat, fresh or chilled&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Meat of pig with the bone, fresh or chilled&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Meat of sheep, fresh or chilled&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Millet&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Oats&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Potatoes&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Raw milk of buffalo&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Raw milk of camel&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Raw milk of cattle&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Raw milk of goats&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Raw milk of sheep&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Rice&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Rye&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Sorghum&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Soya beans&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Sugar cane&quot;' />
          <groupfilter function='member' level='[item]' member='&quot;Wheat&quot;' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/margaritakostina/Documents/My Tableau Repository/Datasources/production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/16/2024 08:53:30 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' increment-value='%null%' refresh-type='create' rows-inserted='1342691' timestamp-start='2024-01-16 08:52:23.112' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>area</remote-alias>
              <ordinal>0</ordinal>
              <family>production_and_emissions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>area_group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area_group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>area_group</remote-alias>
              <ordinal>1</ordinal>
              <family>production_and_emissions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>135</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>2</ordinal>
              <family>production_and_emissions</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>61</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>3</ordinal>
              <family>production_and_emissions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72632</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>item</remote-name>
              <remote-type>129</remote-type>
              <local-name>[item]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>item</remote-alias>
              <ordinal>4</ordinal>
              <family>production_and_emissions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>348</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>item_code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[item_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>item_code</remote-alias>
              <ordinal>5</ordinal>
              <family>production_and_emissions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>348</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>item_group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[item_group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>item_group</remote-alias>
              <ordinal>6</ordinal>
              <family>production_and_emissions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>item_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[item_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>item_category</remote-alias>
              <ordinal>7</ordinal>
              <family>production_and_emissions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>area_harvested_in_ha</remote-name>
              <remote-type>5</remote-type>
              <local-name>[area_harvested_in_ha]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>area_harvested_in_ha</remote-alias>
              <ordinal>8</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>81750</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stocks_in_an</remote-name>
              <remote-type>5</remote-type>
              <local-name>[stocks_in_an]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stocks_in_an</remote-alias>
              <ordinal>9</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43291</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>producing_animals_slaughtered_in_an</remote-name>
              <remote-type>5</remote-type>
              <local-name>[producing_animals_slaughtered_in_an]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>producing_animals_slaughtered_in_an</remote-alias>
              <ordinal>10</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62128</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>egg_or_milk_animals_in_an</remote-name>
              <remote-type>5</remote-type>
              <local-name>[egg_or_milk_animals_in_an]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>egg_or_milk_animals_in_an</remote-alias>
              <ordinal>11</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>101063</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>production_in_t</remote-name>
              <remote-type>5</remote-type>
              <local-name>[production_in_t]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>production_in_t</remote-alias>
              <ordinal>12</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>182681</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>yield</remote-name>
              <remote-type>5</remote-type>
              <local-name>[yield]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>yield</remote-alias>
              <ordinal>13</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>164113</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>yield_unit</remote-name>
              <remote-type>129</remote-type>
              <local-name>[yield_unit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>yield_unit</remote-alias>
              <ordinal>14</ordinal>
              <family>production_and_emissions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_ch4_in_kt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_ch4_in_kt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>emissions_ch4_in_kt</remote-alias>
              <ordinal>15</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>54293</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_n2o_in_kt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_n2o_in_kt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>emissions_n2o_in_kt</remote-alias>
              <ordinal>16</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31563</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_co2eq_calc_in_kt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_co2eq_calc_in_kt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>emissions_co2eq_calc_in_kt</remote-alias>
              <ordinal>17</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>81410</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_intensity_calc_in_kg_co2eq_per_kg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_intensity_calc_in_kg_co2eq_per_kg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>emissions_intensity_calc_in_kg_co2eq_per_kg</remote-alias>
              <ordinal>18</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13827</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source_emissions</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source_emissions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source_emissions</remote-alias>
              <ordinal>19</ordinal>
              <family>production_and_emissions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_co2eq_in_kt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_co2eq_in_kt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>emissions_co2eq_in_kt</remote-alias>
              <ordinal>20</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>290613</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_intensity_in_kg_co2eq_per_kg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_intensity_in_kg_co2eq_per_kg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>emissions_intensity_in_kg_co2eq_per_kg</remote-alias>
              <ordinal>21</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>176928</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>production_emissions_in_t</remote-name>
              <remote-type>5</remote-type>
              <local-name>[production_emissions_in_t]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>production_emissions_in_t</remote-alias>
              <ordinal>22</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>107837</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_intensity_combined_in_kg_co2eq_per_kg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_intensity_combined_in_kg_co2eq_per_kg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>emissions_intensity_combined_in_kg_co2eq_per_kg</remote-alias>
              <ordinal>23</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>64615</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emissions_co2eq_combined_in_kt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[emissions_co2eq_combined_in_kt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>emissions_co2eq_combined_in_kt</remote-alias>
              <ordinal>24</ordinal>
              <family>production_and_emissions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_ch4_in_kt:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_ch4_in_kt:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_co2eq_in_kt:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[avg:production_in_t:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[med:production_in_t:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:med:production_in_t:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:4]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_in_kg_co2eq_per_kg:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_intensity_in_kg_co2eq_per_kg:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_co2eq_calc_in_kt:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_n2o_in_kt:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:item:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Asparagus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Butter of cow milk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cheese from skimmed cow milk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cranberries&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fonio&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Horses&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maté leaves&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Meat of pig with the bone, fresh or chilled&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Other berries and fruits of the genus vaccinium n.e.c.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pears&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ramie, raw or retted&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sesame seed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunflower seed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Whey, condensed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abaca, manila hemp, raw&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Castor oil seeds&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coconut oil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Edible offals of horses and other equines,  fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Green tea (not fermented), black tea (fermented) and partly fermented tea, in immediate packings of a content not exceeding 3 kg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lentils, dry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mushrooms and truffles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oil palm fruit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Other stone fruits&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pomelos and grapefruits&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Skim milk, condensed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sorghum&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tung nuts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Apples&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cereals n.e.c.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cotton lint, ginned&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fat of camels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hempseed&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lupins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Meat of buffalo, fresh or chilled&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Onions and shallots, dry (excluding dehydrated)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palm kernels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pyrethrum, dried flowers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sour cherries&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Strawberries&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vetches&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bambara beans, dry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Camels&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chick peas, dry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ghee from cow milk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kapok fruit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mixed grain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Natural honey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Other fruits, n.e.c.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peppermint, spearmint&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Potatoes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Silk-worm cocoons suitable for reeling&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tallow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Whole milk, evaporated&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asses&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Butter of goat milk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cheese from whole cow milk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cream, fresh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Game meat, fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jojoba seeds&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Meat of asses, fresh or chilled&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Meat of sheep, fresh or chilled&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Other camelids&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peas, dry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rape or colza seed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sheep&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunflower-seed oil, crude&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whey, dry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Apricots&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Buffalo fat, unrendered&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cheese from milk of buffalo, fresh or processed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cotton seed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fat of pigs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Linseed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meat of cattle with the bone, fresh or chilled&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meat of turkeys, fresh or chilled&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Onions and shallots, green&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palm oil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quinces&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Safflower seed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;String beans&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Walnuts, in shell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Beeswax&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cassava leaves&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cloves (whole stems), raw&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edible offal of sheep, fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Green corn (maize)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leeks and other alliaceous vegetables&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meat of other domestic camelids, fresh or chilled&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oil of palm kernel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Other rodents&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plantains and cooking bananas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skim milk and whey powder&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Triticale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Agave fibres, raw, n.e.c.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beans, dry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cattle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coconuts, in shell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Edible roots and tubers with high starch or inulin content, n.e.c., fresh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Groundnut oil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lettuce and chicory&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Meat of pigeons and other birds n.e.c., fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Okra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Other sugar crops n.e.c.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poppy seed&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Skim milk, evaporated&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Soya bean oil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Soya beans&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beer of barley, malted&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cashew nuts, in shell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chillies and peppers, green (Capsicum spp. and Pimenta spp.)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edible offal of goat, fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gooseberries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiwi fruit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mules and hinnies&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oil of linseed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Other pome fruits&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pineapples&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raw hides and skins of sheep or lambs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raw milk of goats&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tea leaves&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yoghurt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Areca nuts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Butter and ghee of sheep milk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cheese from milk of goats, fresh or processed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cottonseed oil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Figs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hop cones&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mangoes, guavas and mangosteens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meat of chickens, fresh or chilled&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oranges&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papayas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Quinoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Safflower-seed oil, crude&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sugar beet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Watermelons&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bananas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canary seed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chickens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ducks&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ginger, raw&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kapokseed in shell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Molasses&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Natural rubber in primary forms&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other meat n.e.c. (excluding mammals), fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Persimmons&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Raw hides and skins of buffaloes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Raw milk of buffalo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tallowtree seeds&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brazil nuts, in shell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cantaloupes and other melons&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chicory roots&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edible offal of buffalo, fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Goat fat, unrendered&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karite nuts (sheanuts)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Meat of ducks, fresh or chilled&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nutmeg, mace, cardamoms, raw&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Other nuts (excluding wild edible nuts and groundnuts), in shell, n.e.c.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pig fat, rendered&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raw hides and skins of cattle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raw milk of camel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tangerines, mandarins, clementines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yams&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bees&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cashewapple&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cinnamon and cinnamon-tree flowers, raw&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edible offal of pigs, fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kola nuts&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Meat of mules, fresh or chilled&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oil of maize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Other pulses n.e.c.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pistachios, in shell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Raw milk of sheep&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sisal, raw&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tomatoes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Blueberries&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cassava, fresh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cocoa beans&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Edible offals of camels and other camelids, fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Green garlic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lemons and limes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meat of other domestic rodents, fresh or chilled&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oil of sesame seed&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Other stimulant, spice and aromatic crops, n.e.c.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plums and sloes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rye&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Skim milk of cows&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;True hemp, raw or retted&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Avocados&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Buttermilk, dry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cherries&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cucumbers and gherkins&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Geese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jute, raw or retted&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Melonseed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Millet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Other citrus fruit, n.e.c.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peas, green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rapeseed or canola oil, crude&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sheep fat, unrendered&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweet potatoes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Whole milk powder&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Artichokes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Butter of buffalo milk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cheese from milk of sheep, fresh or processed&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cow peas, dry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Flax, processed but not spun&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Horse meat, fresh or chilled&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Margarine and shortening&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meat of goat, fresh or chilled&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Other beans, green&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peaches and nectarines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rabbits and hares&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Seed cotton, unginned&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Unmanufactured tobacco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Almonds, in shell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broad beans and horse beans, green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cattle fat, unrendered&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coffee, green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eggplants (aubergines)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Groundnuts, excluding shelled&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hen eggs in shell, fresh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Meat of rabbits and hares, fresh or chilled&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Olive oil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Other tropical fruits, n.e.c.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Raw cane or beet sugar (centrifugal only)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Raw silk (not thrown)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sugar cane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkeys&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broad beans and horse beans, dry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carrots and turnips&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chillies and peppers, dry (Capsicum spp., Pimenta spp.), raw&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edible offal of cattle, fresh, chilled or frozen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Goats&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenaf, and other textile bast fibres, raw or retted&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Meat of geese, fresh or chilled&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Other fibre crops, raw, n.e.c.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Other oil seeds, n.e.c.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pigeon peas, dry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Raw hides and skins of goats or kids&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Raw milk of cattle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yautia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Balata, gutta-percha, guayule, chicle and similar natural gums in primary forms or in plates, sheets or strip&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabbages&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chestnuts, in shell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Currants&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ghee from buffalo milk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kapok fibre, raw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meat of camels, fresh or chilled&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mustard seed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oats&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pepper (Piper spp.), raw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Raspberries&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shorn wool, greasy, including fleece-washed shorn wool&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swine / pigs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Whole milk, condensed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anise, badian, coriander, cumin, caraway, fennel and juniper berries, raw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Buckwheat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cauliflowers and broccoli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coir, raw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eggs from other birds in shell, fresh, n.e.c.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hazelnuts, in shell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Locust beans (carobs)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maize (corn)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Olives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Other vegetables, fresh n.e.c.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pumpkins, squash and gourds&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Snails, fresh, chilled, frozen, dried, salted or in brine, except sea snails&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spinach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanilla, raw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wheat&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Items with known emissions]' type='palette'>
            <map to='#499894'>
              <bucket>(&quot;Meat of pig with the bone\, fresh or chilled&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Barley&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Sorghum&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Meat of buffalo\, fresh or chilled&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Potatoes&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Meat of sheep\, fresh or chilled&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Meat of cattle with the bone\, fresh or chilled&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Rice&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Beans\, dry&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Soya beans&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Raw milk of goats&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Meat of chickens\, fresh or chilled&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Raw milk of buffalo&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Raw milk of camel&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Raw milk of sheep&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Rye&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Millet&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Meat of goat\, fresh or chilled&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Hen eggs in shell\, fresh&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Sugar cane&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Raw milk of cattle&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Oats&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Maize (corn\)&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Wheat&quot;)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:area:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia PDR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia and Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium-Luxembourg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czechoslovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands (Kingdom of the)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sudan (former)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;USSR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Türkiye&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yugoslav SFR&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Items with known emissions:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:item_category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Crops Processed&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Livestock processed&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Livestock primary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Live Animals&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crops, primary&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='production_and_emissions' id='production_and_emissions (capstone_envirolytics.production_and_emissions)_CB408C2AE739427191DD4CBF67EF92B4'>
            <properties context=''>
              <relation connection='postgres.0cuyklc14b6o3k1bfibco0rodauh' name='production_and_emissions' table='[capstone_envirolytics].[production_and_emissions]' type='table'>
                <columns>
                  <column datatype='datetime' date-parse-format='yyyy' name='year' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_B6F90EAC8C6646E9A1B4BA4BA46313FA]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Item share in total production' />
      <command command='tsc:brush'>
        <param name='field-captions' value='IN/OUT(Items with known emissions)' />
        <param name='target' value='Item share in total production' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_E12BCA66F63B4129993C5A58E4552B48]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Total food production by country (all items)' />
      <command command='tsc:brush'>
        <param name='field-captions' value='IN/OUT(Items with known emissions)' />
        <param name='target' value='Total food production by country (all items)' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Emission intensity per product'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median emission intensity per product (sum of all countries)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Average of Emissions Intensity Combined In Kg Co2Eq Per Kg for each Item broken down by Item Category. The data is filtered on Area Group, which keeps no. The view is filtered on Item, which keeps 24 of 277 members.


We can already see that non-meat and dairy products produce significantly less emissions than meat products on average. At the same time, products with the highest emission intensity are not always the highest in terms of production volume.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[production_in_t]' derivation='Avg' name='[avg:production_in_t:qk]' pivot='key' type='quantitative' />
            <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
            <column-instance column='[emissions_intensity_combined_in_kg_co2eq_per_kg]' derivation='Median' name='[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Median' name='[med:production_in_t:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia and New Zealand&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Hong Kong SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Macao SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, mainland&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Taiwan Province of&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]'>
            <groupfilter expression='SUM([emissions_intensity_combined_in_kg_co2eq_per_kg]) &gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:item:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:production_in_t:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' value='268' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[med:production_in_t:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk] / [federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk])</rows>
        <cols>([federated.0gmzic2022xdk610vqg5706mizs8].[med:production_in_t:qk] + [federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk])</cols>
      </table>
      <simple-id uuid='{2080D05D-179A-4E4C-9E74-9F75AB920E6E}' />
    </worksheet>
    <worksheet name='Emission intensity per product (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median emission intensity per product (World)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Average of Emissions Intensity Combined In Kg Co2Eq Per Kg for each Item broken down by Item Category. The data is filtered on Area Group, which keeps no. The view is filtered on Item, which keeps 24 of 277 members.


We can already see that non-meat and dairy products produce significantly less emissions than meat products on average. At the same time, products with the highest emission intensity are not always the highest in terms of production volume.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[production_in_t]' derivation='Avg' name='[avg:production_in_t:qk]' pivot='key' type='quantitative' />
            <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
            <column-instance column='[emissions_intensity_combined_in_kg_co2eq_per_kg]' derivation='Median' name='[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Median' name='[med:production_in_t:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]'>
            <groupfilter expression='SUM([emissions_intensity_combined_in_kg_co2eq_per_kg]) &gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:item:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:production_in_t:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[med:production_in_t:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk] / [federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk])</rows>
        <cols>([federated.0gmzic2022xdk610vqg5706mizs8].[med:production_in_t:qk] + [federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk])</cols>
      </table>
      <simple-id uuid='{CB401359-9722-4483-A1A4-8F472898C859}' />
    </worksheet>
    <worksheet name='Item share in total production'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Products that we have emissions data for account for over 50% of total food production, which is steadily growing over time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[year]' derivation='Count' name='[cnt:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Items with known emissions]' derivation='InOut' name='[io:Items with known emissions:nk]' pivot='key' type='nominal' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[pcto:sum:production_in_t:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:3]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]' />
              <text column='[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:3]' />
              <lod column='[federated.0gmzic2022xdk610vqg5706mizs8].[cnt:year:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</cols>
      </table>
      <simple-id uuid='{317F4010-DA5C-4E1B-805B-7EBCCC8EEBCF}' />
    </worksheet>
    <worksheet name='Production over time by item'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Production development over time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]'>
            <groupfilter function='level-members' level='[item]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([emissions_intensity_combined_in_kg_co2eq_per_kg])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]' included-values='in-range'>
            <min>#1961-01-01 00:00:00#</min>
            <max>#2021-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]</cols>
      </table>
      <simple-id uuid='{892B4109-29FA-47F3-AF77-4E9E4506AE76}' />
    </worksheet>
    <worksheet name='Production over time total'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Production &amp; emissions development over time: emission intensity decreases over time even though production goes up</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Emissions Co2Eq Calc In Kt' datatype='real' name='[emissions_co2eq_calc_in_kt]' role='measure' type='quantitative' />
            <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Emissions Intensity In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[emissions_co2eq_calc_in_kt]' derivation='Sum' name='[sum:emissions_co2eq_calc_in_kt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[emissions_intensity_in_kg_co2eq_per_kg]' derivation='Sum' name='[sum:emissions_intensity_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_co2eq_calc_in_kt:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]'>
            <groupfilter function='level-members' level='[item]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([emissions_intensity_combined_in_kg_co2eq_per_kg])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]' included-values='in-range'>
            <min>#1961-01-01 00:00:00#</min>
            <max>#2021-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]' scope='cols' value='Year' />
            <format attr='title' class='0' field='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' scope='rows' value='Production In Tonnes' />
            <encoding attr='space' class='0' field='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_intensity_in_kg_co2eq_per_kg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_intensity_in_kg_co2eq_per_kg:qk] + [federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk])</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]</cols>
      </table>
      <simple-id uuid='{400F2A74-60B0-46DD-8808-1C1BFB74FE10}' />
    </worksheet>
    <worksheet name='Top-10 countries emissions intensities by item'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top-10 countries by emission intensity &amp; food item
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Index' datatype='integer' name='[Calculation_972425720108068864]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[emissions_intensity_combined_in_kg_co2eq_per_kg]' derivation='Avg' name='[avg:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
            <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_972425720108068864]' derivation='User' name='[usr:Calculation_972425720108068864:ok:3]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' ordering-type='Field'>
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' />
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' />
              </table-calc>
            </column-instance>
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' />
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia and New Zealand&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Caribbean&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Hong Kong SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Macao SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, mainland&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Taiwan Province of&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Land Locked Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Low Income Food Deficit Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Marshall Islands&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Melanesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Micronesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Middle Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Net Food Importing Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Polynesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Small Island Developing States&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South-eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]'>
            <groupfilter function='member' level='[none:item_category:nk]' member='&quot;Livestock primary&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:3]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='10' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='member' level='[yr:year:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' value='Year&#10;'>
              <formatted-text>
                <run>Year&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk] / ([federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk] / [federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]))</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]</cols>
      </table>
      <simple-id uuid='{E94A198D-92E8-44CB-9200-B4832DCE78B8}' />
    </worksheet>
    <worksheet name='Top-10 countries emissions intensity '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top-10 countries by median emission intensity</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[emissions_intensity_combined_in_kg_co2eq_per_kg]' derivation='Avg' name='[avg:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
            <column caption='Emissions Intensity Combined In Kg Co2Eq Per Kg' datatype='real' name='[emissions_intensity_combined_in_kg_co2eq_per_kg]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column-instance column='[emissions_intensity_combined_in_kg_co2eq_per_kg]' derivation='Median' name='[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]'>
            <groupfilter function='level-members' level='[item]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([emissions_intensity_combined_in_kg_co2eq_per_kg])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Belgium-Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Bolivia (Plurinational State of)&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Czechoslovakia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Democratic People&apos;s Republic of Korea&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Democratic Republic of the Congo&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Eritrea&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Ethiopia PDR&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Iran (Islamic Republic of)&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Kyrgyzstan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Lesotho&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Libya&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Mauritania&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Netherlands (Kingdom of the)&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;North Macedonia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Palestine&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Republic of Korea&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Republic of Moldova&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Russian Federation&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Serbia and Montenegro&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Sudan (former)&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Syrian Arab Republic&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Tajikistan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Türkiye&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Turkmenistan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;United Republic of Tanzania&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;United States of America&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Uruguay&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;USSR&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Uzbekistan&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Yugoslav SFR&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Zambia&quot;' />
                  <groupfilter function='member' level='[none:area:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='member' level='[yr:year:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[med:emissions_intensity_combined_in_kg_co2eq_per_kg:qk]</cols>
      </table>
      <simple-id uuid='{B55BD696-0D7A-43E3-BB99-20199E42E27D}' />
    </worksheet>
    <worksheet name='Top-10 countries production'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top-10 producers by food item</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Index' datatype='integer' name='[Calculation_972425720108068864]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[production_in_t]' derivation='Avg' name='[avg:production_in_t:qk]' pivot='key' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_972425720108068864]' derivation='User' name='[usr:Calculation_972425720108068864:ok:6]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' ordering-type='Field'>
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[item]' />
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' />
              </table-calc>
            </column-instance>
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' />
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia and New Zealand&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Caribbean&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Hong Kong SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Macao SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, mainland&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Taiwan Province of&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Land Locked Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Low Income Food Deficit Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Marshall Islands&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Melanesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Micronesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Middle Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Net Food Importing Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Polynesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Small Island Developing States&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South-eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]'>
            <groupfilter function='level-members' level='[none:item_category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:6]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:6]' member='10' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='member' level='[yr:year:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:6]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' value='Year&#10;'>
              <formatted-text>
                <run>Year&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk] / ([federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk] / [federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]))</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[avg:production_in_t:qk]</cols>
      </table>
      <simple-id uuid='{2C38DCF4-784E-42D9-AB49-F942067686DD}' />
    </worksheet>
    <worksheet name='Top-10 emission amount crops'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top-10 countries by emission amount  - Crops </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Index' datatype='integer' name='[Calculation_972425720108068864]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[emissions_co2eq_calc_in_kt]' derivation='Avg' name='[avg:emissions_co2eq_calc_in_kt:qk]' pivot='key' type='quantitative' />
            <column caption='Emissions Co2Eq Calc In Kt' datatype='real' name='[emissions_co2eq_calc_in_kt]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[emissions_co2eq_calc_in_kt]' derivation='Sum' name='[sum:emissions_co2eq_calc_in_kt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_972425720108068864]' derivation='User' name='[usr:Calculation_972425720108068864:ok:3]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' ordering-type='Field'>
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' />
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' />
              </table-calc>
            </column-instance>
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' />
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia and New Zealand&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Caribbean&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Hong Kong SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Macao SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, mainland&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Taiwan Province of&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Land Locked Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Low Income Food Deficit Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Marshall Islands&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Melanesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Micronesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Middle Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Net Food Importing Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Polynesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Small Island Developing States&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South-eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]'>
            <groupfilter function='member' level='[none:item_category:nk]' member='&quot;Crops, primary&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:3]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='10' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:year:ok]' member='2010' />
              <groupfilter function='member' level='[yr:year:ok]' member='2011' />
              <groupfilter function='member' level='[yr:year:ok]' member='2012' />
              <groupfilter function='member' level='[yr:year:ok]' member='2013' />
              <groupfilter function='member' level='[yr:year:ok]' member='2014' />
              <groupfilter function='member' level='[yr:year:ok]' member='2015' />
              <groupfilter function='member' level='[yr:year:ok]' member='2016' />
              <groupfilter function='member' level='[yr:year:ok]' member='2017' />
              <groupfilter function='member' level='[yr:year:ok]' member='2018' />
              <groupfilter function='member' level='[yr:year:ok]' member='2019' />
              <groupfilter function='member' level='[yr:year:ok]' member='2020' />
              <groupfilter function='member' level='[yr:year:ok]' member='2021' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' direction='DESC' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_co2eq_calc_in_kt:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' value='Year&#10;'>
              <formatted-text>
                <run>Year&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk] / [federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk])</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_co2eq_calc_in_kt:qk]</cols>
      </table>
      <simple-id uuid='{0D020314-3BF7-4412-83B0-CC14A387BE3E}' />
    </worksheet>
    <worksheet name='Top-10 emission amount livestock'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top-10 countries by emission amount  - Livestock </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Index' datatype='integer' name='[Calculation_972425720108068864]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[emissions_co2eq_in_kt]' derivation='Avg' name='[avg:emissions_co2eq_in_kt:qk]' pivot='key' type='quantitative' />
            <column caption='Emissions Co2Eq Calc In Kt' datatype='real' name='[emissions_co2eq_calc_in_kt]' role='measure' type='quantitative' />
            <column caption='Emissions Co2Eq In Kt' datatype='real' name='[emissions_co2eq_in_kt]' role='measure' type='quantitative' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[emissions_co2eq_calc_in_kt]' derivation='Sum' name='[sum:emissions_co2eq_calc_in_kt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_972425720108068864]' derivation='User' name='[usr:Calculation_972425720108068864:ok:3]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' ordering-type='Field'>
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' />
                <order field='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' />
              </table-calc>
            </column-instance>
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' />
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia and New Zealand&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Caribbean&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Hong Kong SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Macao SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, mainland&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Taiwan Province of&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Land Locked Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Low Income Food Deficit Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Marshall Islands&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Melanesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Micronesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Middle Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Net Food Importing Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Polynesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Small Island Developing States&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South-eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]'>
            <groupfilter function='member' level='[none:item_category:nk]' member='&quot;Livestock primary&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:3]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_972425720108068864:ok:3]' member='10' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:year:ok]' member='2010' />
              <groupfilter function='member' level='[yr:year:ok]' member='2011' />
              <groupfilter function='member' level='[yr:year:ok]' member='2012' />
              <groupfilter function='member' level='[yr:year:ok]' member='2013' />
              <groupfilter function='member' level='[yr:year:ok]' member='2014' />
              <groupfilter function='member' level='[yr:year:ok]' member='2015' />
              <groupfilter function='member' level='[yr:year:ok]' member='2016' />
              <groupfilter function='member' level='[yr:year:ok]' member='2017' />
              <groupfilter function='member' level='[yr:year:ok]' member='2018' />
              <groupfilter function='member' level='[yr:year:ok]' member='2019' />
              <groupfilter function='member' level='[yr:year:ok]' member='2020' />
              <groupfilter function='member' level='[yr:year:ok]' member='2021' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' direction='DESC' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:emissions_co2eq_calc_in_kt:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_co2eq_in_kt:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[usr:Calculation_972425720108068864:ok:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_co2eq_in_kt:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_co2eq_in_kt:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_co2eq_in_kt:qk]' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' value='Year&#10;'>
              <formatted-text>
                <run>Year&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmzic2022xdk610vqg5706mizs8].[none:item:nk] / [federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk])</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[avg:emissions_co2eq_in_kt:qk]</cols>
      </table>
      <simple-id uuid='{9C9E3EFC-C2F2-4755-A391-061C63FC6593}' />
    </worksheet>
    <worksheet name='Total food production by category'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total food production by item category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[Items with known emissions]' derivation='InOut' name='[io:Items with known emissions:nk]' pivot='key' type='nominal' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column caption='Item Category' datatype='string' name='[item_category]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_category]' derivation='None' name='[none:item_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[pcto:sum:production_in_t:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[io:Items with known emissions:nk]' member='false' />
              <groupfilter function='member' level='[io:Items with known emissions:nk]' member='true' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia and New Zealand&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Caribbean&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Hong Kong SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Macao SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, mainland&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Taiwan Province of&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Land Locked Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Low Income Food Deficit Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Marshall Islands&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Melanesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Micronesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Middle Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Net Food Importing Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Polynesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Small Island Developing States&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South-eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]'>
            <groupfilter function='level-members' level='[none:item_category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='level-members' level='[yr:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:4]' value='p0%' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' value='Year&#10;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]' />
              <text column='[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:4]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]</cols>
      </table>
      <simple-id uuid='{FC3CD3C8-3D46-4449-A3A0-E1CC3B845F6E}' />
    </worksheet>
    <worksheet name='Total food production by country (all items)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total food production: selected items vs the rest</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='production_and_emissions_final (capstone_envirolytics.production_and_emissions_final) (postgres)' name='federated.0gmzic2022xdk610vqg5706mizs8' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmzic2022xdk610vqg5706mizs8'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Ethiopia PDR&quot;' value='&quot;Ethiopia&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Sudan (former)&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
              </semantic-values>
            </column>
            <column caption='Area Group' datatype='string' name='[area_group]' role='dimension' type='nominal' />
            <column-instance column='[Items with known emissions]' derivation='InOut' name='[io:Items with known emissions:nk]' pivot='key' type='nominal' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[area_group]' derivation='None' name='[none:area_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[pcto:sum:production_in_t:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Production In T' datatype='real' name='[production_in_t]' role='measure' type='quantitative' />
            <column-instance column='[production_in_t]' derivation='Sum' name='[sum:production_in_t:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='datetime' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]'>
            <groupfilter function='level-members' level='[io:Items with known emissions:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:area:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Australia and New Zealand&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Caribbean&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Central Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Hong Kong SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Macao SAR&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, mainland&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;China, Taiwan Province of&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Land Locked Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Low Income Food Deficit Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Marshall Islands&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Melanesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Micronesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Middle Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Net Food Importing Developing Countries&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Polynesia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Small Island Developing States&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;South-eastern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:area:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]'>
            <groupfilter function='member' level='[none:area_group:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]'>
            <groupfilter function='level-members' level='[yr:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]</column>
            <column>[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:4]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' value='n#,##0,,,B;-#,##0,,,B' />
            <format attr='text-format' field='[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:4]' value='n#,##0,,,B;-#,##0,,,B' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#d4d4d4' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]' value='Selected crops &amp; livestock items&#10;'>
              <formatted-text>
                <run>Selected crops &amp; livestock items
</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' value='Year&#10;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]' />
              <text column='[federated.0gmzic2022xdk610vqg5706mizs8].[pcto:sum:production_in_t:qk:4]' />
            </encodings>
            <reference-line axis-column='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' enable-instant-analytics='true' formula='total' id='refline0' label-type='value' scope='per-cell' value-column='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gmzic2022xdk610vqg5706mizs8].[none:area:nk]</rows>
        <cols>[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]</cols>
      </table>
      <simple-id uuid='{20696BDC-4810-4BFC-AD40-96851567366B}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Production over time total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' type='filter' />
            <card pane-specification-id='1' param='[federated.0gmzic2022xdk610vqg5706mizs8].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6130DFE0-3AD9-4137-88A2-7AA80B6A9428}' />
    </window>
    <window class='worksheet' name='Production over time by item'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[tyr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' type='filter' />
            <card pane-specification-id='2' param='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B4CA8345-ACFA-47FC-874E-239C53BAC86E}' />
    </window>
    <window class='worksheet' name='Total food production by country (all items)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C2CBCA26-64A1-498E-8208-9E67829C4741}' />
    </window>
    <window class='worksheet' name='Total food production by category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7E1E4108-D088-45E3-BC30-2819433CDA16}' />
    </window>
    <window class='worksheet' name='Item share in total production'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0gmzic2022xdk610vqg5706mizs8].[io:Items with known emissions:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{86E929C9-F9B9-4FFE-BD23-B286BA3A67D9}' />
    </window>
    <window class='worksheet' maximized='true' name='Emission intensity per product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[none:area_group:nk]' type='filter' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='3' param='[federated.0gmzic2022xdk610vqg5706mizs8].[sum:production_in_t:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3A056D5F-B7BD-4D77-82C3-4907A907D813}' />
    </window>
    <window class='worksheet' name='Emission intensity per product (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{389CD4EB-CB1E-4141-A749-B471118BB506}' />
    </window>
    <window class='worksheet' name='Top-10 countries emissions intensity '>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
            <card mode='radiolist' param='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' type='filter' />
            <card pane-specification-id='2' param='[federated.0gmzic2022xdk610vqg5706mizs8].[Items with known emissions]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{793A9ABC-25FE-42CC-AB7A-43E4A5544474}' />
    </window>
    <window class='worksheet' name='Top-10 countries emissions intensities by item'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D2F9C309-8EE4-4142-A837-41BE30867065}' />
    </window>
    <window class='worksheet' name='Top-10 countries production'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gmzic2022xdk610vqg5706mizs8].[none:item_category:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1592F97E-2E72-4324-AF69-2981F5E18518}' />
    </window>
    <window class='worksheet' name='Top-10 emission amount crops'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DA58A4B9-E106-450E-A37E-DCB1C0893A92}' />
    </window>
    <window class='worksheet' name='Top-10 emission amount livestock'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0gmzic2022xdk610vqg5706mizs8].[yr:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F73BAEF5-E367-4A05-A832-F63876D710AF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Emission intensity per product' width='384'>
      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
      OJ1OMpkMxWKRYrHIuXPnGBkZoVAooNVqSaVSpNNp9Ho9KpVKdM3E43GSySSZTOaZro5yt4vX
      66W+vh6lUkkymSSdThONRsXbyF5kMhk2Nzf59NNPiUQirK6uir85HA7W1tZIJBJsbGwIt9H6
      +roITrtRKBSiwnS5XKK1n8vl0Ov1FAoFjh8/TjAYZHx8HJfLtWe5ykGlrKAu36ftxy9v53Q6
      mZ2dpb6+/pWX4yx/Ry0tLVRWVgrnUS6XIxgMkkqldgRFiUTyPap//dd//defuhA/Nclkkpqa
      GpxOJ5FIhK6uLgqFAkajkcbGRvr7+/F6vWg0Gqqrq4lGo4yPj5NMJqmvr6e2tlbM5ilrFbRa
      LXq9nrt37+L1ejl9+jQWi4V0Oo3T6RTdMIVCgampKRYWFrDZbKI7aX5+nvHxcbLZLC0tLZjN
      ZjKZDB6Ph1KpRC6Xo6KiApPJRDKZZHBwkEgkgsvloqamBpVKRU1NDWq1mvv377O2tsapU6co
      Fot89dVXtLW1iYVl8vk8Wq0Wu91OKpUS5TMajcTjcYaHhwkGg1RVVYmupEAgQGtrKy6Xi2Kx
      iNvtFlK6slbCZDLx6NEj/H4/Bw8exOFwkM/nqays3PG2UFdXR39/P1NTU2g0GkwmEy6XC61W
      SyKRwOPxkMlkqKysFG9BTqeTZDJJVVUVVVVV9Pf3s7y8jFqtxuPxoFar6e/vJxgM4nK5qK2t
      fSfeBCKRCOGiHhRKGmxaNKof95rz+fxPoqEolUoUCgUxAeHHJp/P7+gB+CnO/0Puu7SBvgTF
      YpFSqSQqrfJbwO6HLZfLoVarxUNQnrderrT2ojy/vfzwlvctFoviS33RQ1U+z/b9t/8tl8uJ
      7pTZ2VlKpRKtra0v9bCWy1Z+uMv/XyqV9jzfXuV63vWXKd/TH/oj2v0d7b7ud4WFhQWmv7OB
      nqk3Y9T8eAPg0gYqbaBvJbu/1N19+GV2R+CyrfN5lLtE9jpHuYX+Ip53HoVCseM4LS0t4vOX
      Pfb2yvtlKvOXKddunnVPX5bd++6+7neJSqMalCp+5Ma/5A1EBoB3jHehG+Rd5z2XXtpAJS+F
      nCAtkUgk7ygyAEgkEsk7iuwCkkjeMu75EpSUKt6vMWH4EQeBJW8e8un4kSiVSmKOe9mlU1Y+
      vCzxeJzZ2dlXMn2+KolEQphKJW8m6XyJdL6EnN4neRHyDQD43//9X6LRKAqFgsbGRo4ePfra
      p5NtbGwwPj7O6dOnGR4epq2tDb/fj9Vqpbm5+YX7l0ol/ud//oeWlhZqa2tfa9m2MzMzg9ls
      prW19R92DolE8s+BDABszeH91a9+hdFo5Pr16ywuLmI2m1laWkKv17Nv3z5KpRLJZJLKykqW
      lpZwOBxYLBaWl5dpaGhAoVAQj8dZXl4mFosJ0VskEqGjowOTySSmYGazWTFvuTynfnFxkZqa
      GmESTSaTDA0NAdDV1cXS0hKBQID29nahRiiVSqytrbGwsEBlZSXNzc3MzMwQCoVwOp20t7fj
      9/vZ2NggHo9TXV3NxsYGarWajo4OkRcQCoVoa2vD7XaTy+We0kVIJJK3E9kF9B3lhUbK89Gj
      0ShWq5W1tTUGBweF9z6dTtPb28v4+DixWGyHaCwYDPLw4UMMBgP9/f2srq5SKpUYGRkhHo8z
      Njb21HlLpRKzs7NMTk7uSDS7efMmGo0GtVpNb28vWq0Wk8mE2WwWc97j8Ti3b9/GZDKRzWaF
      ArmstJidnWVwcJBAIIBGo+Fvf/sbCoWClZUVVlZWmJ+fZ3R0FI1Gw507d2TXj0TyjiHfANhq
      kV+7do1QKMT+/ftpbGwkHA6zsrKCSqUiFouh0+nI5/OEw2HMZjPr6+sEAgEqKip2HKu1tZWu
      ri5CoRDvvfceSqWSx48fi6zY3YyNjZHP57l8+bJIsIpEIhQKBY4ePQrAF198gdlsxul0Ck01
      gM/no66uju7ubvFZRUUFkUgEnU5HKBRCo9Fw6NAhNBoNwWBQbJtOp/F6vZjNZiwWC6FQSAYA
      ieQdQ74BAGq1msOHD2Oz2aioqECj0dDb24tard5h01SpVCwtLdHc3Ewmk2FjYwObzfZ3nTuT
      yZDNZnfoCsqaibIm4llGzGKxiEajEdvFYjEePnyI2WwWC848j7JuIpPJ0N3d/VzpnEQiefuQ
      AYDvjZK//e1vmZyc5MmTJ8KcmUgkhJPfarUyPDxMe3s7TU1NjI6OCkFZmWf997Po6enh8OHD
      3Lhxg2QyCYDdbiebzTIyMsLw8DDFYnHPQOPxeIQ0bm5ujnQ6LdQSz9JKb6euro5MJoNer3+h
      10cikbx9SBsoW9ZKh8MhTJIADQ0NxGIxLBYLTU1NWK1WLBYLDocDj8eD1WrFZrPh8XhEn3w5
      SJhMJoxGo1ge0mKxYLPZxDEMBgM2mw2z2SyOodVqMRqNQihVXV3N2tqa6AoqWza3BwKtVovF
      YiEajaLT6aipqUGhUJBOp3G73dTV1VFZWYnNZhPbWq1W9Ho9NpsNt9uNQqEQSy9WVlbuKLfk
      zUPaQKUN9FWQNtBnsP22/BRf6u6v5Vll2F3OVy33T32dkteLtIFKG+irIAeBn8FPXRm+iq3z
      h+z3Q7eX/PPT7tShVKl/9Na/5M1DBgCJ5C2j1qKRNlDJSyEHgSUSieQdRQYAiUQieUeRAUAi
      kUjeUWQAYGsEP5PJ7HDsJBKJl3bilE2fL5pQVSqViMfjDA0N4fP59tymUCiwsrLyD/Px5PN5
      JiYmGBsbe2F5dxMIBIjH46+tLMViEZ/PRy6X2/F5JpMhl8uRSqXw+/3AVtZzJpN57vGy2Syr
      q6vCuiqRSJ6PDADAH//4R7788kuhWQ4Gg/z7v/87k5OTL7V/OBxmenr6pSrU/v5+NjY2MJlM
      e/49l8sxMjLywsruh7KwsMDo6CgOh+OV952enmZ9ff21laVQKAi/0nbm5+dZW1sTBlWA4eHh
      FwafRCLB0NCQDAASyUsiZwGBEK1tbGxQVVXFyMgIBw4coFQqEQwGhZjt0qVLGI1GBgcHmZiY
      wOVycerUKW7duoXP52NycpJjx47h8XgolUr4/X5u3ryJXq/ngw8+wOv18uTJEyorK3G5XNjt
      dlKpFA8ePMDv93P48GEaGhrY3Nzk+vXrJBIJzp07R3V1NWNjYzx58oT29naOHj1KNpult7eX
      SCTC+fPn0ev1QgBXUVHB5cuXn1oU3e/309vbSy6XY2pqikgkgsFgYHZ2lhMnThAMBunr68Pl
      cnHp0iUikQh9fX0Ui0UuX74MbLmL7ty5Q0NDA6dOnRLTSJPJJFevXiUej3PhwgU8Hg9PnjzB
      ZDLh9/s5f/48pVKJbDbLvXv38Pv9HDt2jEQiwa1bt4jH45w+fZq6ujr0ej0Gg2HPIJjL5fjq
      q6/Y3Nzk8uXLVFVVsb6+Tl9fH5FI5O9Wc0gk7xLyDYAtF5DT6SQYDJJKpYjFYsK5/80333D0
      6FFaW1v59ttvKRQK1NTU8Nlnn6FQKJiYmODgwYMcOHCAixcvUlVVBWx1R9y4cYMPP/yQI0eO
      cO3aNRoaGujs7OTs2bO0tbUBsLi4SDqd5pNPPsFqtYpKct++fRw/fpzJyUmWlpaYmprik08+
      wefz4fV6uXv3Li6XizNnznDjxg2i0SiBQIBf//rXaDQapqenn7pOl8tFV1cXx48f52c/+xkP
      Hjzg9u3bHDhwAIVCwc2bN7ly5Qpms5n79+9z/fp1jh07xsWLF0WrWq1W88tf/pJIJMLa2po4
      9vXr1+ns7ORXv/oV3377LdFolL/97W9MT08LAV2xWOTu3bsYjUY+/vhjLBYLmUyGlpYWTp48
      ydTUFIVCgdXV1WeqLK5du0ZjYyO/+MUvuHr1KqlUir/97W8cO3aMjz766KmgJ5FIno18A/gO
      j8fD+Pg4FouFqqoqFAoFxWKR5eVlKisrSafTxONxstksa2tr3L9/n42NDfR6PVVVVeh0OoxG
      o5C6hcNhXC4XDocDo9GIRqMRfiGDwSAqKqvVit/v586dOxw7dgylUklFRQV1dXVsbm4CWyuI
      ra+vMzAwQDQaxev1sr6+TiKRIBKJ4PV6KRaLVFdXYzKZOHToEI8fP+bAgQM7rlGlUqHVatHr
      9aKVfeLECaqqqvB6vSSTSYaHh4nFYhSLRRoaGujt7aWpqYkTJ04AsG/fPkwmEzabTXSZFYtF
      otGoCGoej4eNjQ3sdjvnz5/HYrEACGV1S0sLFosFvV6P0+mkvr6edDqNUql8bjdaqVRieXkZ
      tVpNOBwmlUqxtLSE1Wqlrq5OrHUgkUheDvlr+Y5yJb+4uIjH42FzcxOFQoHVaqW9vR29Xo9C
      oSCfzzM3N8eVK1eYnZ0lk8mgVCrJ5/M7Ki+tVks6naZYLFIoFIQrZDcul4vf//7/t3enXW2c
      dx/Hv5JGGwIhAWJHYBZjMF4IeElKmjSN6zrtyYMuyZOe0yd9B30DeRN9Cz09p6c9cd2km9vY
      AcIWgwGDZRaZRYABCyQktI5m7gd0rtvY2AYv8X3D9XlkY0kzGtvXf+aauX7/T5ifn+fmzZu8
      9957T7zGarWKs/eWlhYURSESiVBbW0t5eTnHjx8nl8uJ18diMbEkPpvNYjab99y2MZCbTCZs
      Nhtut5uWlhbxepfLxalTpxgZGaG3t3fPz4Cd1cRms1mE5qXTaZGLlJ+fL15nvD+Tyexqkblf
      JpMJh8MhCoixr7FYjFwuh6Zpcv5fkg5AFgAQCZrNzc10d3fT3t4uCkBTUxN9fX14PB58Ph+N
      jY1ks1n6+/tZXl6moaEBt9tNJBIR0ymlpaV4PB4UReGf//wnmUyGsrKyPbM6QqGQuNnscDie
      yBIxmUz4fD7u3LnD4OAgiqJw+vRpampqGB8fF01nmpubmZ6eJhaL8fDhQz744AMA+vr6aGlp
      wefzPfMYFBcX43Q66e/vx+FwUFtby+bmJqlUikgkQn19vUgr3ev4NTc38+WXX5Kfn4+qqiIl
      9dGoCavVSkVFBX19fbhcLmpra5/4nOfp6Oigt7eX0tJSnE4nHR0dKIrCtWvX0DTtjWWxSNL/
      RzIMjp0gJYfDgaZpJJNJXC4X2WxWDEixWAxd13G5XCIiOpVK4XA4sNls2Gw2kskk29vbInkT
      ED0DFEXB4/FgsVjE2bFxNpzNZolGo6iqisfjwWazkclksNlsoonMo59vtVrJz8/HZDIRi8XI
      ZrM4nU7W19eZn5+npaWFvLw88vPz2dzc5JtvvuHHP/6xmBrJZDKYTCasVusTAVapVIpYLIai
      KLhcLlRVZWtrC7PZTFFREblcDovFgqIopNNp8WvYeaJnc3MTVVXxer1inx/vMZDL5dje3iad
      Toupoce/q3HVYlxx2e12sa+AOF55eXniZrExHed0OsXV2lE0NzdHVVXVG0vklGFw/7/C4GQB
      OCRWV1eJRqM0NTWJwS8ajWI2m8VAKx1+sgDIAnAQcgrokCgpKXmiPaV8JFKSpGeRBeCQeNoN
      WkmSpKeRd8wkSZKOKFkAJEmSjig5BfQd03UdXdefeETydW8LDtb9y3g24FXu46P78ug2nuZZ
      234d+ydJR428AmAnfGxhYUEMKqqqMjY29tQ4gscZyZX7SQMNhUJ89dVXzM3Nvexuk0gknpka
      GgqFuHHjxgtta3Z2lo2NjZfYuycNDg7u+r2u6ywtLbG9vc3Gxgazs7OkUikCgYBYZfw0Kysr
      LC4uvtL9k6SjRhYAoKenh6GhIZLJJLATPXz9+vV9DzAbGxvcu3dvX6tQp6amKC4upry8/KX2
      GRCxDXvJ5XKMjY1RVVVFeXn5gc+UV1dXRRTFqzI7O/vUP592yQYAABAASURBVIvH46ytrZHJ
      ZFhaWnpuHHYkEnmlyaSSdBTJKSDAbrfjdrtZX1+npqaGsbEx2tvbgZ30y4GBAcxmM9///vep
      rq5mYGCAYDCIoij84Ac/oKenh6WlJe7fv8+5c+eorq5G13VGRkYYHx/HYrHQ1dVFMplkZGSE
      4uJiFEWhra2NZDJJX18foVCIbDbLpUuXKCoqoru7m9XVVdxuNx999JFYaRyPx/H7/dTX19PX
      18fdu3fx+/1i5a/h3r17TExMsLGxQTabZW5uDp/Px+LiIleuXBEJpuXl5Vy+fJlAIMDdu3fR
      NI1Lly6haRoDAwN0d3fjcDj4xS9+gclkQtd15ufn6e3tRVVV2tra8Hg8bGxsEAqFaGxsFOFv
      gUCAkZER7HY73/ve94hGo3z++edsbW1x5swZ2traWF9fx2637/n3sri4yNdff00qlaKzs5MT
      J04wNDTE/fv32draEvlEkiS9GFkAQKx0DYfDeL1eTCaTWDw1PDzMRx99RDweZ3JyksrKStra
      2ujs7GRwcJBQKERnZyc+n48LFy6IwWx7e5uZmRl++ctfEo/H+eabb/jRj37E6dOnaWlpoaKi
      AtiZykin03zyySd8++23ZLNZgsEg+fn5XLp0if7+fqanp6mvr+fKlSvkcjmuXr3KhQsXaGlp
      obW1dc+riYaGBk6ePMm5c+coKiri5s2b2O12fvjDHxIMBrFarfzqV7/iiy++4MGDB8zMzNDV
      1UVBQYFYcXvs2DHOnj3Ln/70J1RVxWq1kslkGB8f54MPPsDtdvPFF19w7Ngxbt26xfvvv099
      fb3Yh+HhYT788EOxctlut/Puu++i6zr9/f20trYSi8X2nO5RVZWJiQk6OzspKiri73//Oy6X
      i3g8zqeffiqKlSRJL04WgP/y+/0iqriyshLYWV0YCoUYHBwUA2AqlWJgYIBIJML29jZNTU0o
      ioKiKLtWAkajUUpKSkRCqN1uJ5vNYrFYsFqtIkIhFotRWlqKw+HAYrFgMplIpVKUlZWhKAoN
      DQ1MTExQUFBAf38/NpuNeDwuYhlsNtueqz4tFov4c0VRcLvdvPfee1itVgKBAPPz86TTaRHL
      0NbWxldffUVRURFvv/02ZrOZ0tJSbDYbdrtdDLbpdBq73Y7H48HpdFJUVMTW1hbt7e00NzeL
      qaZcLoeu6/h8PvEzh8NBcXExsVjsucmfmUyGjY0NYrEYTqeTZDLJ5uYmVVVV4ju/rqY5knRU
      yALwX/n5+dhsNoLBIK2trWxsbGA2m/H5fLS3t+N2u8lmsyLL5mc/+xkTExOkUiksFotIuHz0
      8zY2NlBVlXQ6TSqV2nOqw2gw09DQQDgcpqSkBKvVSjQaRdd1lpeX8Xq9jI2N8f7771NcXMzV
      q1eBnQwdI6BN0zQSiQQul2vP+X6jGOi6jtPppLq6mq6uLpFNZLVaqauro6+vb89eAgYj5dR4
      3+bmJn6//4n8HaOYxeNxXC7XgdtPGplHjY2N+P1+otEo4XCYtbU1gOfeJJYk6flkAWAnk99k
      MnHq1Cm6u7spKysjkUhgtVrp7Ozk+vXruFwu6urqaGlpwWq18te//pXt7W1aW1spKipCVVX+
      9re/8dZbb1FVVUVBQQF+v58///nP6LpOR0cHdrsdl8u1K7O+pqaGBw8e8O9//5toNMqJEydo
      aGjgxo0bXL16FVVV+clPfkJeXh7d3d0oiiLC0ozXLSwscPz4cQYGBvj444/FQJyfny+uSIxY
      CJPJRH19PfPz8/zlL3/BarXy7rvvinaPiUSCrq4uwuGwuLIwpnBg535JS0sL//jHPzCbzfj9
      fhEU97i2tja+/PJLHA4H586dE/tgNpvFZ+bl5aEoCiaTCafTidlsFqF7xt/HnTt3KCgooKur
      i+npaf7whz+QTqfp6Oh4ff8oJOkIkGFw+2Bk/RsDoqZpZLPZJ87ojbN8Y7A0wrGMs++9bG1t
      cffuXfLz85mamuLtt9+mvLwcXddJJBJiaggQCaWPFhBj32ZnZ9F1nRMnTuz7iZ9MJoOiKGI6
      xthXq9X63M/IZDLkcrnnJm8aT/O8aKMW41jbbDZxE9pIb5XRz0+SYXAyDO4g5BXAPjw+eJnN
      5j2ncx7/x2ec1T6L0SEsnU5z8eJFSkpKxHsfbxy/139qRVHQdZ26ujox7bJfjxal/ezr0977
      LC/boevxY21cNUiS9PJkAXjDHA4Hp0+ffqnPMDplSZIkHcSeBSAcDrO5ufld74skSS8pkUjs
      amb0XTOeTvuuGbEnb2oKRtO07yTe5Wle9LjLewCSdIi86XsAmUzmqQv7XidN00RHuTfh0ftp
      b4LxePZBybtokiRJR5QsAJIkSUeULACSJL0yL/vU14symUxvtCveQZ/Ae9Ve9LjLp4AkSXol
      3uQg/H+hALxJL7p9eQUgSZJ0RMkCIEmHVC6Xe+WJqcbjlgZN056IAdE07bVs1wgYfNZ2Xue2
      NU3btf3H92evfXyV+/A6jrvls88+++xV7KAkSW9eJBLB7XYTCoUYHR1ldXWVoqIikskkq6ur
      FBYWkslkuHPnDiUlJQd6bHFlZYU7d+5QWlqKoigkEgnRn0FRFAoKCgiHwwwPDxMKhXC5XDid
      ThYWFsSK7pWVFcLhMB6PZ9/bjUajDA0NMTMzw9bWlkiUvXXrFvPz8zgcDlwuFysrK9y+fZvl
      5WUKCwux2+1MT0+L/K2FhQW2t7dF1Pt+pNNpxsbGmJqaYnFxEYfDQV5eHjMzM4yPj/Pw4UPK
      ysoAGB0dJRAIkEgk8Pl85HI5ZmZm8Hg8pNNp7t27R3Fx8YEfFdV1nWAwyMzMDFVVVaRSKYaG
      hggGg1gsFtxuN5ubmwwPD7OwsEBeXh55eXksLS2Ry+VwOp2sra2xurqK1+vd9dnyCkCSDplo
      NMr4+Dh+v59MJsPk5CTRaJRgMIiqqnR3d6Np2oEGolAoxK1bt5iamhJJrKOjo5hMJmpraxkZ
      GSEajfLtt99SWFhIQUEBIyMjqKrK/fv3iUQibG1t0dPT80TEyfMsLi7i8/loaWkhFAqxuLjI
      8PAwTqcTn8/HyMgIkUiE27dvU1paisViYXR0FNhpSmREiff3979QXo7b7aa5uRmv18utW7dY
      W1tjcnKS5uZm0co0GAyyurrKiRMnCAaDLC8vo6oqk5OTojtfOBx+oRvFm5ub3L17V3yn8fFx
      crkcDQ0NDA8PE41GuXXrFi6XC6/Xy8jICJlMhvn5eRGpfvPmzT2PuywAknTIRKNRkV575swZ
      FhYWgJ0wwfHxcVKpFGfPnj1QAaisrOTy5csiqwogGAzS2dmJ3+/H7Xbz8OFDNjc3aW1t5fjx
      42JVsq7rbG9v09vbS2trKz6f70Dfp62tjRMnTlBUVISmaVitVpaXlzl9+jQNDQ2YTCbW19fR
      NI2mpiZOnjzJgwcPxPsjkQg3btzg/PnzT5wBP4/dbqeurg6n00ksFiM/P58HDx5QU1NDRUUF
      nZ2d3Lt3j+npac6cOUNlZSUnT54U4YyqqrK4uMjCwgKdnZ0vdPY/NjZGbW2tGMCnp6c5f/48
      1dXV+Hw+1tfXWV1dpa2tjaamJlRVFe1tE4kE/f39NDY2iiuVR8kCIEmHjKZp4rFEI2gQdvpR
      G53YDmqvgSuXy2G1WjGbzVitVpFMayTKPjonff36dTY2NqirqzvwtnVdJxwOc+3aNWpqaqis
      rETTNBRFEd8zl8thMpnEVFM2mxXvv3btGpqmiUZPB7W4uMjnn3/O7du3aWxsRNM0seI4Pz+f
      RCKBqqpiJa7L5RID8OLiIn/84x/p6Og4cIihrussLi6STCZpaGgQPzNWPBtd9rLZrDgexuOg
      xnG/efMmy8vLNDY27rkNWQAk6ZAxm83ihmUymRQDU2trK++88w4TExOv5EalxWIRg4/RMc8Y
      jI2eFUbhuHLlCh6Ph2AweODtbG1tcf36dc6ePctbb70lIhdUVRU3XS0WC7quo2ka6XR6VyTE
      z3/+cwCWl5df6HseO3aMX//611y+fJnu7m7MZrMoMPF4XPS0MKbGtre3xVRTXV0dn376KUND
      Q6J5035lMhkGBgZQFIXh4WHRutVkMokGVJlMRhRhVVVF/Lpx3D/88EPKy8uf2uRJFgBJOmRc
      LhfRaJRkMsnc3NyuiHGjX8Tk5ORLb6e0tJRgMEg6nebhw4e43W4cDgdra2uEw2HMZrM4I7XZ
      bFy8eJHx8XEikciBthMIBGhsbNx1FltYWMjS0hJbW1uk02kKCwtRVZVoNMry8vKuG715eXl0
      dXXR19dHLBY70LZTqZSYu/d6vSSTSbxeL6FQCF3XCQQCVFdXU1lZydTUFLquMzU1tetqo6qq
      ivLycm7fvn2gp3QsFgtdXV00NDRQVlZGXl4ehYWFVFZWMj09TS6XY2VlhcLCQjE1FYlEyOVy
      ougrisL58+cJBAJ7BnzKp4Ak6RCJRCKUlpaiaRo9PT3E43EuXrwozsyrqqqor69ndHSUsrKy
      fQeITUxM0NPTQyQSYX5+XhSTgYEBJicnOXXqFH6/H5fLRV9fH6FQiHPnzuHxeIjH43i9XoqL
      iykuLmZmZobKysp9z4cHAgHm5uaYmJggEAhQWFhITU0N/f39zM7O0t7eTnV1NRaLhd7eXsLh
      MBcvXhSFsLy8HK/Xi8PhYHV1ldLS0n3fjE0kEvznP/9hfHycQCDAhQsXqK+vZ2tri6+//hpN
      03jnnXcoLy9namqKwcFBioqKaG9vR9d1YrGYKBDBYJCKiop9B/WZzWYKCgrwer14PB6SySQn
      T56krKyMwcFBxsbGOHnyJHV1dRQWFtLX18fc3BwdHR0UFxezvb2N2+2mpKSEsrIyJicnqa6u
      3nXcZRqoJB0ij6aBZjIZLBbLa12lqqrqrjlx2Ltz3etgTMM8OqBmMpldVx6vgjHVYrFYdn1u
      Op0W9yHgf7vXGVMyr1MulyOXyz1x3GHvxlFPI6MgJOmQ+i6ikfcaaL+rKOq9tvM6vrNxs/Vx
      j//saZ0CX4e9CvuLHHd5D0CSJOmIkgVAkiTpiJIFQJIk6YiSBUCSJOmIkgVAkiTpiJIFQJIk
      6YiSBUCSJOmIkgVAkiTpiJIFQJIk6RC5ceMGH3/8Mb///e/RdZ21tTV+85vf8Nvf/pZ4PL7r
      tXIlsCRJ0iGi6zplZWUiSjoYDFJaWioiqoeGhuju7qalpUVeAUiSJB02ZWVlaJrG+vo609PT
      tLW1AbCxscHvfvc7jh07xr/+9S9ZACRJkg4bt9tNYWEhMzMzbG5uUlVVBewkq6bTaRKJxE5b
      0De8n5IkSdIrpigKra2t9PX1kU6nRTtIh8OBoij4fD5++tOfygIgSZJ0GLW2tjI9PY3f7xft
      KJubm/F4PPT29jIyMiL7AUjSYfJoPwDpaIrFYiSTSUpKSgiFQng8HtGpraKigvX1dVZWVnA4
      HLIASNJhIguAdBByCkiSJOmIkgVAkiTpiJIFQJIk6Yj6H4RXpO3I1uO1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Emission intensity per product (2)' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Item share in total production' width='384'>
      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
      1GFaJAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Production over time by item' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Production over time total' width='384'>
      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
      EADg8vwFPvysszCfOngAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Top-10 countries emissions intensities by item' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Top-10 countries emissions intensity ' width='384'>
      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
      gu/7EEURo6Oj0HWddVl4nodSqYRisYharQaO46AoCqLRKEZGRgCENxmc67qwLAvT09PgeX5L
      9k+e55FKpRCLxSAIAizLwqNHj2BZFjzPYw17NBplwSOYTprP51GtVgGsT3uOx+M4cuTIrlKf
      UAAgrxXP89DpdNBut9HT0wOe56nrZw8EfdiNRgMcx7EkZdvxPA/NZpOlgg4CBHk+Qd+/67ps
      RfBODXq9XgfHcRBFcVeDvwEKAIQQElJ0a0QIISFFAYAQQkKKAgAhhIQUBQBCCAkpCgCEEBJS
      FAAIISSkKAAQQkhIUQAghJCQogBACCEhRQGAEEJCigIAIYSEFAUAQggJKQoAhBASUhQACCEk
      pCgAEEJISFEAIISQkKIAQAghIUUBgBBCQooCACGEhBQFAEIICSkKAIQQElIUAAghJKQoABBC
      SEhRACCEkJCiAEAIISFFAYAQQkKKAgAhhIQUBQBCCAkpCgCEEBJSFAAIISSkKAAQQkhIUQAg
      hJCQogBACCEhRQGAEEJCigIAIYSEFAUAQggJKQoAhBASUhQACCEkpCgAEEJISFEAIISQkPr/
      /hvgEC1sptEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Top-10 countries production' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdWWxcaZbg9/+9sW9kMLgzSAZJUSQlUaIkSkpJuSmrsiqns6rtmZ72wIZh
      wI8eYwAb8IPhV7/5wRh47AdjbAOGMYZhGOUezHRVZ1VOZ3amlJlaqIUiRYq7yODOIBnB2CPu
      4gc5bouSUrmIwQiJ5wcIFBkLzw2S98T33e98RzFN00QIIcSRo1Y6ACGEEJUhCUAIIY4oSQCi
      apimicxICnF4JAGIqrG9vU2hUKh0GEIcGZIAhBDiiJIEIIQQR5QkACGEOKIkAQghxBElCUAI
      IY4oSQBCCHFESQIQQogjShKAEEIcUfZnP5EqTFFpUg0sxOFRnt0N1DRN1tbWKhmPOMKy2SxO
      pxObzVbROHRdr3gMEofEcRhxKD+0HXTpZkVRXusbVcqbHv9REovF+NsHKxSNH/ez6g2HuHyq
      /cDjKBQKOByOiv/O5PN5XC5XRWOQOKozDtM0KRaLOJ3O13oe+6tuNAyDkZERcrkcZ8+epaam
      5rW+2UGbnp5mZWUFt9vN+fPnX/pD0TSN6elpTp06dejxGYaBaZooimL9+yGlKRBVffXlGdM0
      MQwDAFVVX/rce3t7BAKBH/19n/34Q9+/XP5wc4Z4RvtR9/3VhZ6yJAAhjorvTQCmaXL37l2a
      m5vp6OigWCwSjUbZ2Njg5MmT3Lx5k0gkQldXF/fv3yeRSPDOO++Qz+cZHx+nv7+flpaWsga/
      vr7OlStXWF9fZ3x8HKfTye7uLsPDw2QyGXK5HJlMhng8jq7rjI+Pk8vlGBoaYnt7m7a2NlZX
      V2lpaSnLkO6zzz7D7XaTz+e5dOkSoVBo3+2GYViJofT/VCpFMpmkra1t3+3PJgZFUYhGo4yM
      jNDY2Mjp06epqanZlzgMw+DevXu89957qKpq3fbsiOjZ53/06BG9vb1kMhmKxSJNTU2v/P5C
      iDffK0cAu7u7XLx4EQCbzcbvfvc7/vIv/5JvvvmGq1ev8s0339DY2MjGxgaXL19mZGSETCbD
      +++/j67rZQ++UCjw+9//nlgsxj/5J/8E0zTx+/2Mjo5imibxeJz33nuPWCzG+vo6yWSSuro6
      ZmZmWFtbo7a2lqmpKcLhcFni83q9XL58mcXFRebm5tja2qK1tZVoNEp9fT13796lrq6OSCTC
      6OgowWCQ3t5e0uk0s7OzzM3NATA8PMz169dxOBz09fXR398PwIkTJ+jr6yOdTvPXf/3XFItF
      3nvvPRYXF9nd3SUej5NMJrl+/TrFYpEPPviAkZERdF3n5MmTzM3NkUqluHDhAnfv3iUWixEO
      h3E4HKytrXHv3j1M06S3t5fJyUlUVeXs2bN0dXWV5fUSQhyuVyYAVVXJ5XLW1Mq5c+doa2tj
      enoar9dLc3MzqVSK2tpaamtrMU2TCxcuWInh/PnzQPnm351OJ7/5zW9YX1/nwYMHpFIpAoEA
      drsdj8fDu+++i9vtBiCRSLC+vo6maXR1deHz+bh79y719fVliQ0gnU7zu9/9jrq6Os6dO0cs
      FsM0TQqFAoZhoOs67e1PpzB0Xaejo8Oa26urq8PtdrOxsUEul6O/v5+2tjYWFhas53/48CGr
      q6sEAgEAAoEAMzMzGIbBJ598wldffcXKygqqquL3+4lGo+RyOT755BMMw2B1dZV4PI6iKBw/
      fpzz58+zsbFBsVhke3ubq1evkkqlmJ6e5vTp0wSDQdbX18v2egkhDtf3TvQqisL58+f5wx/+
      wFdffcX29jY2mw1FUaipqeH69essLCwQCoWYm5vjq6++orGxkZWVFQKBgHXiiMfjZQte0zRu
      3LjB5OQkTU1N1smzNFVRmg5RFIXW1lZrPt7pdNLa2sri4iI9PT1li8/n8/Hpp59imiaZTAZN
      0ygUCmiaRn19Pb/61a+YmprC6XTy8ccf8/jxY5LJJACPHj3i0qVLNDQ0WM/3/HWEoaEhfvnL
      X9LY2Eh9fT0XLlzgxIkTpFIp8vk8mqbhdDqpr6/n4sWLHD9+nGAwiNfrZXZ2lq6uLnp7e63n
      fnYvfpvNRjabJZ1Ov/aFJiFEdfpRq4A0TcPhcOz7Wj6fx+l0ous6N2/e5MqVK9jtdkzTJJfL
      4XQ6uXv3LhcvXjy0OePStNP3zecbhoFhGNhsNpaXl3ny5Anvv/9+2eJZWloiHA6TyWRYXV0l
      mUySyWTo6urC6/UyMTFBIBAgHA7z+PFjAoEAvb291rWLaDSK3++np6eHfD5PIBAgHo/T0tLC
      3t4exWKR+vp6NE1jdHSUdDrNqVOniMfjPHnyhFAoxODgIKOjo2QyGQYHB0kmk0QiEeLxOGNj
      Y7hcLgYGBsjlcszNzdHT04PT6cTtdnP//n0cDgc9PT0oioLb7SaVStHU1FSW1ysWi/Ff/c9/
      95MuAv+zv7h04HHIKiCJo9rjOKhVQD+YAH5MIOl0Gr/f/1qBHKbS9YHSdJGoDrFYjP/6f/n6
      RyeAj4e7+af/8OKBxyEJQOKo9jiqJgEIcVBisRiBQKDif1ySACSOao/joBLAz1rsreu6lOsL
      IcQb7gcLwUprwUtryEurRxoaGnC5XNaFVdM0sdls1n1K68Wf/VxV1X1ry4V43v/79eQPVgL3
      hkNcHew4pIiEeHu9MgFcv36dfD7P7u4u//gf/2P+6q/+Co/HQ0dHB7W1tfzhD3+gpqaGra0t
      QqEQXV1dOBwO5ufnKRaLfPzxx/zbf/tvcblc+Hw+rl27xo0bN7h69eqRmXvP5/PY7fZXFpr9
      mO0q9vb28Pl8mKb5Vr92n92a/cFrAB9f6JEEIMQBeOUUkGEY/PrXv2ZgYICtrS1M0+S3v/0t
      xWIRwzBoamrio48+orOzk1/+8pdsb2/j9/txOBzWmndVVfnzP/9zgsEgS0tLGIbxVp/AnqVp
      Gv/6X/9rJicnrZHQsx81TUPXdeLxOHNzc+i6btUHGIaBpmlomoZpmoyPj5NMJlleXrYeW7pN
      CCF+jleeiUsXGhKJBJ2dnT+4tYNpmoyOjvLRRx+RyWRQFMV6zMDAAH/1V3/FhQsXDi76Kre7
      u0tXVxc7Ozvs7OzsqwQOhULcv3+furo6HA4HMzMzFItFlpaW0DSNoaEhFhYWiMVi1mtWShbB
      YJC7d++STCb58MMPqaurq/CRCiHeRK9MALquc+vWLRobG6mtraW7uxuA9vZ2PB4P3d3dqKpK
      V1cXNpuN7u5uDMPg9u3b1v46kUgE0zRxOp34/X6r8OgoKFXebm9vs7u7axWpFQoFTNNE13Xa
      2trw+Xy4XC5OnDjB9PQ0H3/8MQ6Hg9XVVWw2G9vb2wDWYx0OBy6Xi0QiQTwelwQghPhZXpkA
      WltbGRwctD7v6Hg671p6V1/6vPSxtK1BZ2en9ZhwOIxpmjx58oSTJ09WxT7ah0HXdba2tjhx
      4gSBQIDV1VX8fj+5XM6qBP7FL37Bt99+S39/P4VCAV3XqampwefzsbS0hNvtZnBwkHQ6ve+5
      nzx5Qjgcpra2tkJHJ4R4G7wyATx78n8diqIcqXf+8HT+f3BwkHA4TFNTE5ubm2xtbTEzM0Mk
      EiGdTjMxMUFTUxPhcJhEIsHc3BzHjh0DoKmpifX1ddLpNMeOHSMUCuH1euno6MDn8zE2NobT
      6bSSrxBC/FRSCCaqRiwW47/5367/4CqgX5zv5p/+++W7liSFYBJHtcdxKA1hhDhs/9N/+WnF
      /7iEOCoq0/ZJCCFExckIQFSV3301QUF/+dTLX147id8jW1MLcVAkAZSRpmnW1hd2u73ic8pv
      gj/envveawC/uXJcEoAQB0gSQBl9/vnn+Hw+amtr962oKjVzt9vt+/Zbstls1kZ7drsdTdOs
      +0nyEEIcNEkAZeTxeBgeHsblcnH37l3W19fp6+sjFouxvb3N2bNniUajJJNJDMPgypUr3Llz
      B4/HQ3t7Ow8fPkRVVT744AOCwWClD0cI8ZaRi8BllE6n+eabb3j48CHZbJbh4WF6enpwuVyo
      qkosFsPpdPLBBx8QDodZXFykq6uLDz74gO3tbdxuNzabjc3NzUofihDiLSQjgDLy+XxcvXoV
      p9PJ7du3qa2tZWtrC7vdzuDgIHt7e1YbS3ja5L7Uz9flctHQ0EBnZyc+n6+CRyGEeFvJCKCM
      jh07Zm190dHRgdPppKGhAV3X2dzcpKWlxfp6W1sb3d3duN1uRkdH6ezsRNd15ubmZMdPIURZ
      yAigjJ7dpqG1tdX6/8t2RC01Wj916pT1tXfeeaeM0VUnt9OO+3sKgeVCuBAHSxKAqCr/4r/4
      M6kEFuKQyBSQEEIcUTICEFXl//ny0UsrgY93hHj/TKQCEQnx9pIEUEamaZLP59F13VrSKV7t
      85H5l1YC/3K4WxKAEAdMEkAZzc7Osri4aO3j39bWRrFYtLYaLvUHVhQFXddRVXVfz+RisWg1
      lC9tK+FwODBN06oaVlVVLo4KIX4WSQBlYhgGT5484dq1a2QyGVwuF99++y3xeJzGxkYikQg3
      b96kubmZ7e1tPB4PW1tbhEIhqwXnwsICmqYxPDzMjRs3cLlcRCIRYrEY7777LiMjI5w5cwav
      11vpwxVCvIHkInCZmKaJqqrous7o6Cg3b95kdXWV5uZmlpaWKBaLNDU1cfXqVfx+P9euXSMc
      DvP+++9TLBZxuVzY7XYSiQS5XI6+vj6uXLlCPp8nGAwyMzODYRhy8hdC/GySAMrEZrPhcrnY
      2Nigt7cXr9eLz+ejq6uL999/H1VVaWxs/N7HT05OMjw8TH19vfU1RVFQFIXOzk5GR0dpa2s7
      jEMRQrylZAqojC5evMjY2Bi5XI7+/n7C4TCPHz+mubmZtrY2a4uH3t5eVFXl2LFjOBwOOjs7
      0TSNR48e0dzcTDAYxOv14na7CYfDBAIBampqaG5urvARCiHeZJIAysjlcr1Q9RsOh1+4X6li
      uHRbqWr4ZQ3f3W43MzMzDAwM4PF4DjrkivO6HRSMFy9quxyygkqIgyZN4UXViMViBAKBilcC
      S1N4iaPa4ziopvByDUAIIY4omQISVeX//uIRBf3Fr/+HvxjE75V2kEIcJEkAZVQq5CoVfO3t
      7REKhX7wMaqqHtmq4b+9+/JK4H/v3X5JAEIcMJkCKqPr169jmiY7OzuMj48zOjqKaZpomoau
      6xSLRTRNo1gsks1m0XWdra0tMpkMxWKRXC5HsVi0tpTI5/PSG0AIcWBkBFBGz56sS//f2tpi
      YWEB0zTZ2tpiaGiIRCLB2toaXq+XxsZGnE4nX375JYFAgGKxyJkzZ7h9+zaKovD+++9Lf2Ah
      xIGQEUCZmaZpnfzj8Tg3btzg9OnT5PN5Lly4QEdHBy6XC4fDwfr6OsViEcMwCAQCfPTRR7jd
      bhYWFnA6nSiKQiwWq/ARCSHeFjICKCOn08nKygp7e3vYbDYCgQB+v59oNIrH46GmpoZCoUA0
      GuXSpUvcuHHjpc/j8/lwOBy0t7cTCAQO+SiEEG8rGQGU0dmzZ1lYWCCVSjEwMMDAwAAXL160
      TuZOpxOn00lnZyePHz+mu7ub1tZW/H4/x48fB572Fe7r68M0TZaWlip8REKIt4mMAMooEAjw
      4YcfWp+3t7cD0NPTs+9+pZP9s0qbvJWqgy9evFiuMKuKz+NEM198X6KqsuW1EAdNEoCoKv/8
      n31S8SpLIY4KmQISQogjSkYAoqr8X387TuHFOjD+o48HCXhlZCDEQZIEUEalAi+Xy2Ut43wZ
      Xdetdo9H3Zf3Fl5aCfwP3x+QBCDEAZMEUCaGYXDjxg38fj8Oh4NTp06haRqmaeJ2u60KYJfL
      RTabJZlM0tTURLFYRFEUXC5XxXejFEK83SQBlFGxWKSmpobu7m62tra4efMmdrudc+fOkUgk
      WF9fx+VyMTAwwN7eHnNzc9b2D7/4xS9wu92VPgQhxFtMLgKXiaqqXLt2jXQ6zeeff06hUODU
      qVO8++67bG1t4XA4sNlsbGxsYBgGmqbhcrm4evUqbW1tZDKZSh+CEOItJwmgTHRdZ2dnh/7+
      ftxuN7lcjnw+z+7uLqZpsry8zPDwsNUWUgghDptMAZWJoijWtE5XVxcul4t79+7R2dnJ6dOn
      WVpaYnp6mp6eHgKBAA6Hw+rw097ebhWCCSFEuUgCKBNVVenr66Ovrw+A3d1dLl26REtLC/C0
      Efyznj3hNzQ0HF6gVSbgdWEoL/ZCkEpgIQ6e9AQWVUN6Au9XDb1nJY7qjEN6AgshhHgtMgUk
      qsr/+fnYvp7A//GvTksBmBBlIgmgjEpTCaZpouv6vkpfXdfRdR273Y6iKN873ZBIJPB4PDid
      TorFIjabDcMwMAwD0zR/1FC0UCiQzWapra39WcexublJoVAgHA6jKAr5fN6qcHa73T9qqkTX
      dVRV/cH7fvXgyb5K4L/44IQkACHKRKaAyujGjRtWT+BHjx5RKBRIp9PWCXRra4u5uTmWl5fR
      NA1N00ilUmiahmEYpNNpHj9+TCqVAmBsbIydnR1u3brFysoK6+vr6LpONpslnU5jGAa6rpNK
      pcjlclYv4Y2NDebn563bCoUChmFYj8vlcmQyGatzWel+pb7EN27csJJXIpHg66+/ZnZ2lunp
      aSvuXC63L35d163n1jSN+/fvk0wmMQyjYj8PIcR+MgIoo+d7Av/pT3+ipqaGbDbL+fPn2dnZ
      IRqNoigKXq+X8fFxstkswWCQ2tpaVlZWSCaTVr8AXdcZHx+npqaGxsZGZmdnMU2T0dFRnE6n
      tby0WCySTCb58MMP+e677wCoqanZdxLu6+vj/v371uhDVVUuXbpEQ0MDd+/eJZ1OY5omXV1d
      JJNJ4vE4TU1NLC0tceLECWpqatB1nY2NDR48eEBjYyP5fJ5MJoPP56O/v5+pqSl2d3cZHh5m
      cnISXdc5e/ZsxS+gCSGekhFAmT3bE9jn8/HBBx/g8XisPX96enoYGhrC7Xazvr5OXV0dKysr
      rK6u8tFHH9HV1WU9l6ZpxGIxvF6vtQrANE3OnDnDyZMnSSQSaJrGhx9+iN/vZ319nZ6eHi5c
      uIDL5SKRSHDt2jXq6+vZ3d2lv7+fkydPMjg4SG9vL/l8HtM0SSaTXLt2jWAwiNfrpaenh/7+
      fhRFwTRNbDYbsViM69evk81mqa+v5+LFiywuLlJXV0csFrM2uMtmszidTrq7uzl37pyc/IWo
      IpIAysjlcrG0tMTa2hp2+8sHWzabjWQyiaIo+P1+Ojs7uXz5MqZpEovF9m0J4XK5eP/991le
      XmZ3d/eF53I4HOzt7RGNRkkmkzgcDmKxmPWuX1EU4vE4qVTqe5ePleboE4nES+8XCoWYm5uj
      sbHRuqbQ1NSEoigEg0HC4TCXL19maWmJnp4e2trarMemUikMw6BQKLC3t2d9FEJUhkwBldHZ
      s2d58OABLpeLoaEhQqEQ8LQFZG1tLW63G4/Hw8TEBIVCgXPnzvHkyROampo4f/48k5OT+P1+
      a7uIjo4OAoEAly5dYm9vj0gksu8irGmaBAIBa1qpvb2dRCLB2toakUiESCTC9PQ07e3tNDY2
      UiwWrQuzz16kPnPmDFNTU0QiEYLB4L6itXA4TLFY5NGjR7S2ttLc3IxpmiiKwqVLl1hYWKCh
      oYHjx48zNzdHbW0tfr+fvr4+FhcX8fv9aJpGMpnEbreTTCapqak55J+MEAKkEOytYpomDx8+
      JJ1OE4lErH7Cb4pYLMZ/+69uknhmFdB//5//mobg4W6LIYVgEke1x3FQhWCSAETVkErg/arh
      RCNxVGccUgkshBDitcg1AFFV/tWfHpJ7piPkf/LJGWqkEEyIspAEUEalYi54ugRUVX/8gKtY
      LJJOpwkGg+UKryp9Pbq4rxL4P7h2UhKAEGUiCaCMpqam2NjYIBQK0dPTAzxdZul2uykUCmia
      hsfjQVVVMpkMqqri8XgoFArEYjHW1tYYGhoim83idrtfe75PCCGeJQmgTAzDYHl5mV/+8peo
      qkoymeThw4fs7u5y/Phxa4lnS0sLnZ2d1jYPQ0NDTE1NoaoqLpeL5eVlotEomUyGX//61z9p
      FCGEEK8iZ5MyKa2NL60kURTF2sRtZ2eHnp4eLl68SD6f33fb3Nwc7e3tDA8P4/F4rNtKhVNC
      CHFQJAGUic1mw+v1Mj8/TzweZ3FxkVAotG9rh5LV1VXq6+uJRCLY7XarelfTNGZmZjhz5syR
      uxYghCg/SQBlNDw8TCqVYmFhgba2NnK5nLX/T3t7Ox6Ph0gkQkdHB9lsFpvNxuDgIHV1dayu
      rtLe3s6pU6dYWFigs7Nz33bSQgjxuuQaQBmVtoAoGR4efuE+pf6/z95WV1e37z7P7qfztqsL
      uLHZ/74jjPQCFqJ8JAGIqvLf/We/qniVpRBHhUwBCSHEESUjAFFV/o8/jlqVwCc6G/j4Qk9l
      AxLiLSYJoExKLRENw0BVVdxut3XbswVd2WwWXdfx+/0YhkE+n8fj8VQi5Kpw4+GSVQlsGIYk
      ACHKSBJAmRSLRRYWFrh//z7nzp2joaHB6tnb0dGBrutWh698Pk93dzf5fJ5YLEZrayt2ux3T
      NDEMg2KxiK7rP3k7CSGEeBVJAGXidrsZGhpia2uLoaEhRkZGGBwcZHp6mmg0ytjYGMFgkPb2
      djRN486dO3R0dLCzs0MymSQYDFods1ZXVzFNk6GhIdrb2yt9aEKIt4S8nTwkpf69mqZZUz7v
      vfceNpuNmzdv4vV6CQaDFItFWltbiUajrK2toaqqtf/4xsZGpQ9DCPEWkQRwSFRVJR6PWz1w
      6+vrra0iTpw4wdbWltX/NxQKkUgk0HWdUChEMBjkxIkT1oZyQghxEGQKqMxOnjwJQG9vL/Pz
      8zQ2NtLY2GgVe4VCIWpra9E0jWKxSHd3N6ZpWvdpbW0lmUyyvr4uCUAIcaAkAZRZqYq3vr6e
      +vr6F24vNXx/1t7eHna7nUgkgs1m48SJE2WPs1qEajw4HE8rgQPSB0CIspKewKJqSE/g/aqh
      96zEUZ1xSE9gIYQQr0WmgERV+d//5gE5Df7TPxui1uf+4QcIIX42GQGUWSKRIJ/P/6zHlpaN
      AmiaRi6XO8jQqtK341G+uLdALq/98J2FEK9FEkAZFQoFPv/8c6anpzEMg0KhYG0PkU6nicfj
      FItFCoUCu7u7FItF8vk8e3t7pFIpkskk9+7dI5VKkclkiMfj1u2l50kmk+zt7WEYRqUPVwjx
      hpEpoDLa3d2lq6uLnZ0d4vE4N27coK6ujr6+Pu7fv4/dbqe9vZ319XU0TcPr9VpbRJS2h5id
      nSUQCBAKhdjb22NqagrTNMnn81y6dIm5uTk2NjY4ffo0nZ2dlT5kIcQbREYAZbS0tEQymSQW
      i7Gzs0MgEOC9994jHo8zMDDAiRMnyGQybGxsEAgEWF9fx+l0cunSJVpaWvD7/fT09HDixAkM
      w0DTNNxuN5cuXaKpqYlcLkc+n0fTNBKJRKUPVwjxhpERQJlomkY8Huf06dNsbW2xsrJiVf+6
      3W4WFhbw+Xw4HA78fj9tbW20tbWxurpqPYfdbieXy5FKpQBeWJa4ubmJ1+ulp6dHNokTQvxk
      kgDKpLR5W1NTE3V1dWxtbeH1egFobW1lb2+P9fV1urq6uHDhAktLSzQ2NtLT04PL5aKzsxOf
      z0d3dzcrKyt0dHTg8XhoaGjA6XTS2dmJ0+lkcXERwzCOVNtIIcTBkARQJg6Hg6amJuBpb+Bn
      d/EsFAokk0mam5vp6OjA7XbT3Ny87/GhUAiASCRifa2UQACrqnhwcLBsx1AJDUEvLpeOzSYj
      GiHK7Y2qBDZNk0KhUOkwRJns7u7i8/leu7rxdRWLRex2e8UrgQuFQsVfC4mjOuMoLRF3OByv
      9TzyNktUjUqfcJ9VDbFUQwwgcTyvGuI4qBjeqCkgRVEOZQ+OfD6PzWbDbn+jXp43ns1m42/n
      U2jK09c9UufmYkfg0ONQFKUq9gICKr7nTInEsV+l4zBNE0VRXnsk8kaf4W7cuEE+n8c0TU6f
      Pv3CPPrPNT8/T0NDA42Nja/1PNvb2/h8vn39gEsSiYTVD7ipqem1h3Jvi0zRoMjTora8JsVt
      QpTTG50ADMPg3LlzzMzMsLW1xaNHj0ilUpw/fx5FURgbG0NVVd555x2++OIL3G43AwMDbG9v
      s7u7y8DAAB0dHdbzra+vc//+fZLJJBcuXGBqaop8Pk9LSwuhUAi73U48Huf48eM/Kr6lpSVa
      WlqsSt9jx47h9/tZWlpidnaW5uZmQqEQuq4zPz9PsVikr6+v4vOLQoij4Y2+BlAoFLh9+zZP
      njxBVVWrofrU1BRer5eGhgZ2dnZIpVK0t7fzzjvvsL29TTwep6Gh4YX9+aempvjwww85ceIE
      uq4Ti8W4evUqLS0tPHnyhKWlJauRy4+VSqV4/Pgxfr+f6elp1tfXWV5eprW1FUVRWFpaolAo
      EAgEyGazzM3NHeRLJIQQ3+uNTgBOp5OPPvqIDz74gGg0ai23HBwcZHR0lEgkQkNDA6ZpYrfb
      UVUVRVF455138Pv9PHjwwNp6AZ6u/jAMw9pXp7T2PhgMkkwmicfjL23q8kNaWlpoamrCNE0S
      iQThcJhgMIiqqhiGQSaTYXx8nK2trZ+9cZwQQvxUb/QUUCgU4ptvvsFut3Pp0iVmZmaYnJzk
      2LFjRCIRJiYmcDgc+Hw+DMPA6XRSX1/P/Pw8Ozs7dHd3c+/ePTo6OmhpaWFwcJAbN27gcrlo
      aWmxpmJsNhvt7e3kcrnXvjAYCAR48OABbrebpqYmFEUhl8uhqupLrxUIIUS5vFF1AD/ENE1M
      00RV1X3//777wdN5/9J0TOnrpWbtJZlMhrt373LhwgU8Hs+PjqdQKFjPa7fb0TTNuo4A4Pf7
      rduSySSKouDxeI7sNYBYLMafnuQp/v/vS47Vu3mvu/bQ45COYBJHtcdxUB3B3qoEUC6laSFZ
      FlpesViMmQSYtqe/1I1+B8cbfnzCPSiSACSOao/joBKAnNF+BFVVZbO1Q3K+vaZZYc8AACAA
      SURBVPI9gYU4KuSsJoQQR5QkAFFV/jC5w+2lZKXDEOJIkCmgMiqtNvL5fBw/fvwHryEUCgW2
      trbw+/2k0+kjucVzVjMo6FIBLMRhkARQRouLiwwNDVmVv42NjSQSCZqbm5mbm8PpdNLe3s7c
      3Bw2m43Ozk5sNhvZbJbd3d0jmQCEEIdHpoDKKJfLcevWLcbHx3G5XHz22WdomoaiKNTX17O9
      vc3m5iaNjY3Mz89TKBSIRqOVDlsIcUTICKCM3G43Z86cYWFhgbW1Nfr7+zl+/DgbGxuMjY2h
      6zqNjY2srq5y9uxZ3G43sipXCHFYJAGUUT6fZ3Z2llQqRX19vbUVRSaTwel0UiwWWV1dZWVl
      BYfDIZXAQohDJQmgjD788EM0TbO2eSjtMRSJRKirq8PhcGC32ykWi1az+GAwiM1m+1l7Dgkh
      xE8hCaCMnt82wmazWR+f3VX0Ze/8S/c9arpDbhoDR3MrDCEOmyQAUVXOh/1SCSzEIZFVQEII
      cURJAhBV5feTO6TyeqXDEOJIkARQRrOzs8RiMQDi8TiPHz+ucETVL6cZmMhSWCEOg1wDKKPH
      jx9TV1dHQ0MDk5OTrK6uUldXR3NzM7u7u9jtdubn53E6nfT19bG2tsb29jahUIj6+noWFxcp
      Fou4XC5M06Snp4fZ2Vk0TWNgYIBUKkU2m8XlctHQ0FDpwxVCvGFkBFBGfr+fYrFIMpkkl8tR
      X1/P48eP2dvbY3R0FNM0aWpqYmdnh5WVFe7fv09jYyNTU1NsbGyws7NDNptlb2+PRCJhJYd8
      Ps/CwgIjIyNMTk7+pCY1QghRIiOAMlIUhdbWVsbHx6mvr2d3d5dIJMLo6CiBQIB0Os3o6Ci6
      rtPU1ITf76etrY3Z2VlM06SlpQXTNHE4HKRSKRKJBIuLi2iahtvtxu/3c/r0aXw+X6UPVQjx
      BpIRQJk1Njby5MkTWltbAWhtbWVlZYXm5may2SxOp/Ola/5f1o0ql8ths9lwOByYponNZjuy
      9QJCiNcnI4AyunLlCg6Hg3/0j/4RLpeLK1euWNtClBJCfX09drsdl8tFJBIB4PLly9aJvdSj
      uLRHUDabtaqGS/2EhRDi55CzRxmV+nWWKn2dTieGYXDlyhXrBF9b+2LT81f1+QwEAmWItHr0
      hNw4bDIwFeIwSAI4ZLJa59XOhf247JIAhDgM8pcmhBBHlCQAUVXG19OVDkGII0MSQBktLy9j
      mibZbJatra19t6XTadbX18nlchSLxe99jsXFRdLppyfFaDRqdRh71WOet7Gxwfb2tvX59PQ0
      mqZZS0pfZXt7m6+//pp0Ok0ymWRkZIRvvvmG+/fvk8/nf3QMP5ZmSBWwEIdFrgGU0dTUFG1t
      baTTaZaXl8nn82xvb1vVwQA3btxAVVWGh4fRdZ2ZmRkGBgZwu91MTk4SjUZ599138fl8bGxs
      EA6HicfjLCws0NbWxsTEBN3d3Xg8Hubn5zFNk5MnTxKPx2lsbGRzc5O9vT2WlpZoamrixIkT
      bG5uEolEcDgcACwsLJBKpRgYGMButzMzM0M2m+X48ePcunXLumDt9Xo5efIkf/d3f8e5c+fY
      3t4mGo1y7NgxvF4vq6urxONxBgcHefLkCZlMhtbWVkzTJBqN0tvbi9vtZm1tjXg8zunTp2Xn
      TyEqSEYAh+jBgwc0NTUxPT3N3t4eW1tb1NXV0dbWhsPh4M6dO7S0tHD79m3u3btHMBjc1xhG
      13Wrj7DL5eLWrVs0NTVx9+5dVlZWyOfzFItFotEojx49AmBiYgLTNAmFQqTTaebm5qznW1hY
      YGlpiY2NDavoLBqNsre3h9PpZG5ujoaGBrq7u3G5XNhsNrxeL06nE6/Xi8PhIBKJcOfOHTY3
      N1ldXcXn8/HkyRPC4TCJRIJcLmfd7/bt22xsbLC+vo7X62VxcfHQfwZCiL8nCaDMisUiuq5j
      GAY+n4/W1lZrOaiiKHi9XmpqajAMg52dHRYXF7Hb7SSTSTo6OvZt82CaJuvr6+TzecLhMBsb
      GywtLeF0Oq3+wp2dnaRSKatuoFRHUF9fTyQSoVAo7Hu+VCpFOBymsbERp9NJOp2mtbWVjo4O
      0uk0Xq+X2tral9YbPH78mKmpKfL5PLquEw6Hqa+vR9d1UqkUHo+HSCTCxMTEC/cLhUI/OP0k
      hCgvSQBlVF9fz5dffsmdO3deaPFYqvT1er1MTExQKBQIhUJWtzCfz8f169f3vUt2OBwMDw8T
      Doe5d+8e7e3t6LpOMBhEVVWmpqYYHR2lvr6eQqHA7du3rbn/6elpxsbGaGhosL63oijWRnUP
      Hjwgl8sRCoWYmJjgzp07P7hktZQgnm9kr+s6X375pdXzOJPJvPR+8DSJZLNZxsfHJSEIccgU
      82V/leJA6LrO3t4eNpsNv9+Prus4HA6KxSI2mw3DMFBVlXQ6bRWLZTIZ3G43NpuNZDKJy+XC
      7XajqqrVXxiwniOTyeBwOFhdXSWXy9HV1YXX6yWfz5PP53G5XDgcDtLpNHa7HY/Hg6Zp2O12
      62Mul0PXdbxeL4qikE6nMQwDv99vxVj6vqXv7XA4yOfzFAoFnE6nNUJQFAXDMKyRhsPhQNd1
      isXiS+9nGIbVFzmZTDKXVHinu7L9kAuFAg6H46XbcRym0s+v0iSO6ovDNE3rb+p1SAJ4S2Qy
      GRRFeaN3Bo3FYiQMJ8eaaioahyQAiaPa4zioBCCrgN4SXq+30iEciPbayv+BC3FUyDUAIYQ4
      oiQBiKoyviaVwEIcFpkCKqN8Ps+jR49QVdVaZ1/aBnpxcdFaEir+niaXpIQ4NJIAymhkZIRI
      JEJdXR2xWIy5uTlWV1c5deoULpfLKtra3t7mxIkT5PN5Zmdn6ezspK2trdLhCyHecjIFVCaa
      ppHL5QiHw/h8Pmw2G4qi4Pf7WVxcZGFhgd3dXebn52lqamJmZgZVVTl27Bj37t37SXv9CCHE
      zyEJoExUVUXXdXRdB56ue29ra6OmpgbTNK2iqJaWFurq6jBNk9nZWcbHx62KWSGEKCeZAioT
      VVWJRCJ88cUX1NXVvdD562VrzFOpFH6/n1gsdlhhCiGOMCkEK6PSVtCmaVqVvqX+vqZpoqqq
      9VHXdUzTJJ/P43A4cDqdFS9EOmyxWEwqgZ9RDQVHEkd1xiGFYG+A0mZvP0Zpi4TSFs1HVaPv
      aB+/EIdJrgGIqhKWSmAhDo0kACGEOKIkAYiqMiaVwEIcGkkAZTQ1NWX1At7d3WV8fPx775vP
      56VDFqDLmgQhDo1cBC6jmZkZgsEgjY2NTE5OsrW1RXd3N2NjY0QiEXw+n7XfvqZpuN1uDMNg
      ZmaGYrFIX18fU1NTAJw8edLqzSuEEAdBRgBlFAgE0DSNvb098vk8wWCQW7du0dbWxoMHD9B1
      ne+++45bt25hGAaLi4s8efKEVCpFW1sbCwsLVkvHZ3v5CiHEQZAEUGbhcJixsTGrJeTm5iYL
      Cwu4XC6r0brdbsftdmOaJplMxuqZWygUaG5upqmpiVwuV+EjEUK8bSQBlFlDQwNLS0vW5m6l
      xuyBQIDNzU1qampwOp2sra0BT/sIj46O8uDBAwKBAKOjozx8+JC6urpKHoYQ4i0klcBlpGka
      NpvN6r2r6zqKopDL5bDb7Vbx17NUVSWfz2OaJi6Xi2w2C2D1632bSSXwftVQcSpxVGccUgn8
      Bni+urf0uc/ne+XjSttG/Jj7vm2apBJYiEMjU0CiqrRJJbAQh0YSgBBCHFGSAIQQ4oiSBFBG
      S0tL1pbQm5ub+25LpVKsrq6Sy+UoFArf+xwLCwukUing6UXSb7/91moak06/uG2Crusv/foP
      0TSNGzdu8OTJE+trjx49siqZf4rFxUVZtirEG0AuApfRzMwM7e3tpNNpVlZWyOVybG1tEQqF
      aGlpQVVVvvrqKxRF4eLFixiGwePHjzl16hRut5vx8XGWl5f54IMPAHj48CHDw8OoqsrS0hIj
      IyOcPXuWUCjE7Ows3d3d5PN5bt68ydmzZ+nt7WV8fBy3201vb69VVTwwMIDdbmdzc5OZmRlO
      njxJNBolGo3S0dEBPE0ICwsLJBIJGhsbWV5eZmVlhdraWhKJBF1dXYRCIUZHR6mpqaGtrY1c
      LsfOzg41NTWoqkosFmN2dpZTp06xvr7O1tYWp0+fJhAIVOxnIoT4ezICOEQPHz6ko6ODubk5
      EokEW1tbNDc3093djdvt5s6dO3R3d3P79m3u3btHc3MzLS0t1uPD4TBffPEF6+vrNDY20tLS
      QmdnJ06nk4GBAe7fv08gEKC1tZVIJGL1Gd7Z2eHOnTvkcjlaW1sxTZNCocDo6CgnT57k7t27
      BINBuru7re+3urrK8ePH0TSNbDbL1NQUnZ2dTExM0NPTw8TEBI8ePcLn87GyssLMzAx//OMf
      8fv9RKNRkskkd+/epa+vD5vNRm1tLR0dHdy9e7dSL78Q4jkyAiizYrGIpmkYhoHP56OpqQmn
      04lhGCiKgsvlwufzoes6u7u7zMzM4HK5rO0gnm0P2dfXR1dXF9999x0OhwOPx4PP52N0dJRC
      oUA+n0dVVTweD16vl93dXXZ3d3E4HJw8eZLFxUXu3r3Le++9R7FYJBgMUldXZ9UYeL1ea31z
      NBple3ubZDJJd3c3Ho+Huro6QqEQoVAIeLrBXS6XQ1EUVFXl4sWLtLa2srKyQjqdpqGhgVAo
      RLFY5N69e/j9fjKZTEV+DkKIF8kIoIwaGxv5/PPPuXXrFg0NDftuKxUZ+Xw+xsbGyOfz1ok1
      EAjg9/v58ssvWVhYsB4zMjLCnTt3SCaT1NbWEo/HmZiYIJPJ4HK50HUdt9vNzs4Ok5OTtLW1
      YRgGXq+XYrGIzWajWCySy+Xw+/3s7u7y7bffUigU9tUe6LpOLpfjz/7sz/jkk09YXV196fGF
      w2F0Xcfr9eJwOLDZbNZx1dTUWNcstra20DTNaoEphKgOUglcRoZhkMlkrHflhmFgs9nQdd06
      GZYqg0sVfblcDpfLhaqqZDIZnE6nVZWqaZpVpWq329E0DV3XsdvtFAoFnE6nVXms6zoul4t8
      Pg88LUbL5XKoqorb7baeL5vN4vV69/UnNk3TirX0f3hapVzavbT0sTQCKMVf6m9cuk8+n8ft
      dlMsFjFN83sroOHpRe5AIFDxKkupBJY4qj2Og6oElgQgqoYkgP2q4UQjcVRnHAeVAGQKSAgh
      jihJAEIIcURJAhBCiCNKEkAZLS4uWpXAGxsbP/nx29vb37sCRwghXpfUAZTR7OwsHR0dpNNp
      VldX8Xq9jI2NUVtbS19fH5OTk+Tzec6cOcPa2hpbW1s0NDQQiUSYnZ1lamqKY8eOYbPZmJ6e
      pru7m/b29koflhDiLSEjgENiGAY3b95kYGCAtbU1dF0nHA7jcrmYmZlhfHyc7u5u5ubmWFpa
      Ih6Pc+LECVRVxeVyMTg4yIMHDygWi5U+FCHEW0JGAGVWKBTQNM2q0g2FQtjtdtLpNLdu3UJV
      VZqbm/H5fDQ0NOB0Otnb26O1tRVFUUin00xMTJDP5ykUCui6bjWYEUKI1yEjgDIqVQLfvHmT
      cDiM2+3mj3/8I6urqxSLRRRFwTCMF6pjg8EgIyMjPHjwAE3TrOIwTdMqdCRCiLeRFIKVkWma
      ViWw2+1mYmKCQqHA1tYWv/rVrygUCiiKYlXGlqpnS9XBpQrbUtGHw+FAVdWKFyiVixSC7VcN
      BUcSR3XGIT2B3wCKolg9fU3TpLu7m2QyyenTp62N4J6nqk8HZR6PZ9/XbTZb+QMWQhwpkgAO
      SWm3Ta/XW+lQhBACkGsAQghxZEkCEEKII0oSQJmNjo7ua+ryUxiGYfUD3tvbk6pgIcSBkmsA
      ZZROp1leXqZYLBIIBEgkEmxvb9PT08PCwgKxWIxTp06h6zoTExOcPn2aXC7HysqK1dXrm2++
      4ezZs1ZXrrW1NVZWVvB6vfT29vLo0SM0TWNoaOi1VwQIIY4WGQGUUelkv7e3RyKR4G/+5m/w
      eDysr6+TSCQIh8MsLy9z584d+vv7uX37NjMzMzQ1NbG3t4fD4aCjo4Njx46xt7fH+vo6U1NT
      NDc3E4/HSSaTdHV1YbfbmZ+fr/ThCiHeMJIAymhmZoa5uTk2NzdZW1vjzJkzRCIRMpmM1Ru4
      UCgQj8d5/PgxHo8Hl8tFfX09Ho/HqgMoLQk1TROPx2PdvrOzw3fffcfq6qoUiQkhfjJJAGWS
      zWax2+18+umnfPTRR2xsbFg9c5ubmxkdHeX27ds4HA7q6+ut3rrPFh+5XC4SiQRjY2MALxQm
      FYtFq3hM6vmEED+VVAKXSellVRQF0zSt/r+KopBIJJieniaZTHL8+HHC4bDV0/f5k7xhGK/c
      /6eUBJ5tyP6mkkrg/aqh4lTiqM44pBK4yj178iid+EsCgYB1Ubf0rt/tdr/0eWw22yurgOXC
      rxDi55IEUAGqqtLQ0FDpMIQQR5xcAxBCiCNKEoAQQhxRkgDKaHFxEV3XWVtbY3d3t9LhCCHE
      PnINoIyePHmCz+djbGyMa9eucf/+fRRFob+/n6WlJTY3Nzlz5gy5XI7a2lp0XSedTrOyskKh
      UODs2bMVX20ghHh7yQigjJLJJH/913/N8PAw0WjUWtI5Pj7O8vIyvb29zMzMkEwmWVhYYGFh
      gXQ6TXd3N16vl9nZ2UofghDiLSYJoIwCgQAXL15kbm6OeDzO0tISu7u7uFwuGhsbrSWg4XCY
      1dVVYrEYPp+Pb775huXlZanuFUKUlSSAMuvt7aVQKGAYBoZh4HA4Xli773a7cTgcuFwuTNNE
      VVU0TZPqXiFEWUklcBk9/9KWkkCpB3BJPp/n5s2bnD59mlAohKZpqKr6Vvf/fRmpBN6vGipO
      JY7qjEMqgd8Az59AXlXVe+7cOWpqalAU5Xu3fRBCiIP0Ro0AdF1nY2Oj0mGIMslkMjidzhdG
      SIdN1/WqGH1pmlbx10LiqM44TNPEMIxXbhPzY7xRCeANClX8DNvb2wQCgYrvb1QsFqtiFFba
      ILDSJI7qi8M0TTRNe+3f08qn05/g+Xdkz++4+fx9Srtwquqrr3Xrus7s7Cx9fX0/6V1fPB4n
      lUrR3t7+ox/zsth/yv1+7ON+joP6Xq8V43f/HMXM/PTHHaDSn1Slr744qyAGkDieVy1xOHj9
      ON7oVUCfffYZ169fB2BhYYF/+S//pXXSL2XIubm5fV97/h9gFV4Br7zv8//8fj/T09PWY5+3
      sLCAaZpkMhnW19f33ZZKpVheXiabzX7v4wHm5+etvsCbm5t89dVXPHjwgFwuRzKZfOH+uq5b
      9/8pisUiX331FQsLC9bXHj58yObm5k9+roWFBXK53E9+XLVQqI4/8GqIASSO51VDHAf1O/pG
      jQCe5/V6yWazGIbB4uIi3d3dRKNRHj16RC6X49NPPyWRSBCPx7l37x7RaJRPP/2Ur7/+GkVR
      uHbtGqFQiLm5Oa5cucLCwgLj4+N0dHTg8/l4/Pgxdrudd955h5GREQzDwOfzEY/HMU2TTz75
      hPb2dqLRKMeOHXshvvn5easD2NraGplMhs3NTRoaGgiHwzidTr744gsArly5gqZpPHr0iKGh
      ITweDw8ePGBtbY1r164BT0/IV69eRVEUFhcXuXXrFufOnaO+vp6pqSl6e3vJ5/N89913nDt3
      jv7+fu7fv4/H46G/v5+JiQlM0+T06dPYbDY2NjaYnJzkzJkzLC0tsbKyQldXF/A0ISwvL5NK
      pWhqamJpaYloNEowGCQej3Ps2DEaGhoYGRkhGAzS3t5ONpslFosRCoWs55+amuLs2bOsrKyw
      sbHB+fPnqampOaxfESHEK7zRIwBVVWlvb2dmZgan04nD4cDv9+PxeMhkMmQyGfL5PMFgkK6u
      LoaGhtje3sbpdBIMBq0+upqm4XK5mJ+f57e//S1nz54lGo3y29/+lt7eXlZWVtA0jU8++QSv
      18tHH31ET08PyWQSv99PJvPjpiwmJibo7+9ncXGRRCLB5uYmnZ2dnDx5Eq/Xy927dxkcHOT2
      7duMjIzQ3d1NR0eH9fiuri5+//vf8+TJE1pbW+nu7qavrw+fz8fw8DCjo6OEQiG6urro6+tj
      amoKn89HMpnk9u3bGIZBT0+PtYRsbGyMixcvcu/ePZqamujv7yccDgOwurrK8ePH0XWdbDbL
      7OwsAwMDzMzMMDg4yOTkJGNjYzQ0NLCxscHMzAx/+tOfaGhoIBqNsre3x4MHDzh37hwOh4Om
      piYGBgYYGRk5+F8EIcTP8kYnAIDW1lYmJiaor68H4P79+1y+fNk6kcHT6Zb5+XmGhoZwu93U
      19czPDzMwMCA1ayltD4/m81aq0ByuRypVAqXy0Vra+tLryXk8/lXXhAqFApommaNHurq6nA4
      HBiGgaIo2O12XC4Xmqaxu7vLxMQEPp+PTCZDY2PjvtUGx44d4y/+4i/Y2toiFotZxWMPHz7k
      3r17FItF4GmTGKfTSSKRYH5+nnQ6TU9PD7lcjm+//ZZCoUA2myUYDOLz+fD5fBiGYSVRgKWl
      JSYnJ1laWiIWi+HxePD7/dTV1REIBKzOZjMzM+Tzeex2O5cvX6apqQl4uqKnoaEBv9+P3W7n
      5s2bzM3NvdFTQ0K8bd7oBBCJRAgEAvT29tLT00N3dzcnT57k1q1beDwe3G43HR0d7O3tYbfb
      uX37Ng0NDaiqyoMHD6wTZjgcZnFxkfPnzzMyMsL09DTnzp3j1q1b2Gw2IpEIra2tALS1teF0
      Omlubsbr9bK8vExbW9tL42tubuazzz7j22+/tU6MsL9DmN/v5/79++RyORoaGtA0DbfbTW1t
      LX/605+Ym5uzHnfr1i2++uordnd3CYVC7O7uMjY2Rj6fx2azUSwWcbvdbG9vMzY2Rnt7u7Vk
      LZPJoOs6hmFQKBQIBALs7u5y/fp163Eluq5TLBb58z//c37zm9+wurpqxfvsx46ODqsYxW63
      77uttraWWCzG119/zebmprUPkqzkEqJ6vFHLQMsll8tx7949Ll++/IMrhp4Vi8VYXl7m7Nmz
      33uffD6PqqqvXK5VqvxVFGXfGuNSRWopptKFbZvNZjWD13Udm822r2/wsxXHuq4DT4vQno/F
      NE2rqvHnrirSNA1FUV66HrkUr91utxrXv2r9dCwWIzD+v+Kq8CogIY4KSQCiasRiMQKJR7hs
      lf2VlEIwiaPa4zioQrDKv5pCPKv9MlR4nxW9UEB1OKDCCUDP57FXwd43EkcVxmGa6MUiNtkL
      SLxVTOPpv6qIocIrvk2z8q+FxHHAcSgVf2PxLEkAZfb8DNthVPS+0W7+D1DhawCV32zgqcq/
      131K4tjvteLo+RgiHxxUKK9NEkAZZbNZ7t+/b9UrANbH+fl52tvbK76trBDi6JIEUCamaXL7
      9m1OnTpFMBhkdXWVyclJFhcXOXfuHD6fj2KxyPz8PJubmwwNDZHL5ZicnKS7u5tIJCKjAyFE
      Wb3RdQDVTNd1NE2joaEBu92Oqqr4fD7a2tpYWlpifn6eeDzO2toa/f39zM7O4vF4OH/+POPj
      49IOUghRdjICKJPS2vxisWgVSTU2NuJ2u8nn89b9Ghsb8Xg8KIpinfgLhcK+df1CCFEOkgDK
      RFEUjh07xh//+Edqa2tpbm7eVyn7fMGZoigUi0VsNpu8+xdCHAopBCuz7+sD/DIH1eThTSWV
      wOKtd0CrgKQn8Bui1Nz9x5B+wEDnVVCroBLYZqt0FQCarmN/zUpPiaPK4gh2HWgsr0sSgKgu
      4XekErgURzVUnEocVRvHQZAEIKqLoT/9V/EY1PInAEUBRRbiicqRBFBFvq9q+Ei59S+OTiVw
      1zXo/sVhfTchXiAJoIzGx8fZ2trC7/czNDT0gxds8vk8q6ur1NXVsbe3RyQSOaRIhRBHkSSA
      Mtre3ubq1avMzs4yNTVFfX09Ozs7dHZ2Mj4+jtPppLe3l0ePHqGqKidOnMDn85HP539WY3ch
      hPgpZAKyjFKpFP/m3/wbbt++TW1tLf/u3/07amtrcTqdDAwMoOs629vbnDp1ikQiYTW3F0KI
      wyAjgDLy+/386le/Ynp6moWFBc6cOUNHRwfRaJTx8XFUVSUYDPLo0SPOnTv32mt6hRDip5AE
      UEbZbJavv/6aQqFAJBLBMJ7uIV76mM/nWV5eZnl5GUVR6OnpsfoF/5TWlEII8XNIAiijf/AP
      /sFLvx6JRGhra9vXSL2kpaUFeNpQXgghykkSQIUc+Yrf79P5HlS4J7Cma9hsNpRy1wLXdpb3
      +YX4AZIARHUJX6x4JbBRKGCrgkpgIcpNEoCoLoYGeoWvfxgaGPDSnsCKCmrl96MR4iBIAiiz
      g+r9e2R6CN/6H6u7ErjjXej95LBCEaKsZKlJGZmmyd27d9nc3PxZj9d1nUQi8f+1d29NbeXn
      nse/WjoLdEKAxMnYnI0PGBi3446Nu5NJqlKVnhew98uYQ83N1K55EXvP1Mzt7Nozk7tUJZVJ
      JU51J+5uQ9ucwQgQYHG0hEBCQue15sJBG9I+Niwk0PO5sbGE+pFNr0dr/f+/9QCQSCTY3Nw8
      y/KEEFVOzgB0lEqliEQiaJqG2+1md3eXWCxGd3c3S0tLRKNRbt26RT6fZ25ujtu3b5PJZFhf
      X8dut+N0Ovnzn//MnTt36OzsxG63Ew6H2djYwOFw0Nvby/T0NLlcjqGhIWw2W7nfshDiApEz
      AB1Fo1Ha29tJJBLE43H++Mc/4vV62d7eJpPJcO3aNTY3N3n+/Dk3btxgbGyMUChEW1sb6XQa
      q9VKR0cH169f5+DggO3tbUKhEFeuXCGVSpFMJuno6MBms7GyslLutyuEuGCkAehE0zSWlpZY
      W1tjd3eXra0tbt++TWtrK+l0Gq/Xi9FoJJfLEY/HWVxcxO12Y7Va8Xg8pU/zJpPpRELYZrOV
      Ht/d3WV0dJRIJEKxWOZbKAshLhxpADrJZDLYbDZ+8Ytf8PnnnxONRjH+4wZOkQAAFxZJREFU
      dYpQU1MTs7OzjI6OYrFYaGxsJJvNYrFYXu8//2sS2GazcXBwwOTkZOnPjhLCiqKgqioGg4Fs
      Nnv5F4eFEGdOZgKXQTweZ2FhgWQySW9vL83NzRQKhTcmg983U7hQKHzU2MlKdiFmAp/jLqBs
      Nou1AiZPSR2VV4fMBL7AnE4n3d3d2Gw27HY78PZk8PsO7h8ybP5CaX9YAUngIkbF+OYcmLPl
      3OsRQi+X7OhxMSiKgtfrLXcZlan530gSWIhzIg1AVJZiDorneOBV5EAvqpc0gHOkqup7r9VX
      TeL3bUb/8XyTwA/+M5gd5/ffE6KCXPyVwwq2tLSEpmmkUik2NjaYmpp67/dsbGxwcHBwDtUJ
      IaqdnAHoaG1tjY6ODtLpNK9evWJ/f59CoUA4HMZut5NMJrHb7WSzWVZXV7l+/Tp2ux2TyUQw
      GCQajVJfX8/Vq1cZHx/HbDYzMDBQ2k4qhBCnIWcA50hVVSYnJykWi0xPTxMOh2loaMDtdnPj
      xg3Gx8fZ2toimUyyuLjIzZs3CYfDLC4uYrFYyOVyrK+vl/ttCCEuCWkAOstms+TzeVRVZX9/
      n+XlZZqbm3G73dy9exdFURgfH2dlZYVcLlf6PofDgcvlwmw2k0gk2NjYIJPJlLaNCiHEackl
      IB01NTXx+9//HlVV+eSTT0ilUly/fp3R0VEcDkdpofco1AGvt4gaDIbSZR6j0UhbWxs7OzvA
      Jdz3L4QoG0kC6yybzaIoyjtHQL4v7QuU7vVzma//lyUJ/IZdQLlcDrPZXPadWJWQOJU6KrMO
      SQJfEB/yg/Iht3K4zAf+E9pHzvenUpHZzKJ6SQMQlaV5uOxJYCGqhTQAUVkK2bO/F5DRKmlf
      Id5AGkCZ/O3SS7mvN1eMsX86+yTwj/8TWGrP9jWFuASkAehoY2MDj8dDTU3N9x6LxWIkk0kK
      hQKtra1lX1QSQlQfaQA6OhoGHwqF2N3d5datW3g8Hubn51laWqKzsxOfz4eqqnz33XdkMhmG
      hoZwOOTeNEII/UkQTGeHh4dEo1H6+/sJhUKlQNfw8DBGo5HV1VUKhQJXr16ltraW5eXlcpcs
      hKgScgZwDurq6rDZbBgMBlKpFD6f78S2zng8zszMDGazmfr6+jJWKoSoJtIAdGQ0GlEUpTTn
      12g04vP5ePLkCWazmWvXrp0If2UyGVkMFkKcG2kAOrp9+/aJrwcHBwH45S9/icFgOHHwDwQC
      l2a2rxDiYpAGUAZvui2E3OPnr65+pk8OQAjxPXLUEZWlaVCSwEKcE2kAorIUMqCop38dk03S
      v0K8hzSAClH1s4CPjP23s0kCf/ofweo8/esIcYnJiqOOnj9/XprgtbOzw9OnT9/63Gw2y8rK
      ynmVJoQQcgagp52dHZLJJC0tLQSDQeLxOHt7e4yPj3P16lW8Xi/5fL70qd9ut1MoFJienkZV
      Vfr7+5menkbTNAYHB099728hhDhOzgB0dDT1KxaLoaoqTqeT0dFRenp6mJ+fR1EUxsbGGB8f
      x2g08vLlS1ZWVjCbzfT19bG6uorL5cLr9UpCWAhx5qQB6KylpYXp6elSwjcej/Py5Uvq6uow
      m82YzWZMJlNpa2g2m6Wurg6Hw0GxWMTj8eB2u0sjI4UQ4qxIA9DR0a0dotEozc3NmM1muru7
      icfjGAwGdnZ2aGhowOVysb29jclkwu/3MzU1xdjYGB6Ph8nJSSYnJ2lsbCz32xFCXDIyE7gM
      CoXCO1O/qqqiaRpGo5FCoYCmae+cKXxZnOlM4FPsApKZwFJHpdchM4EvsPelfo83hqpLCF/7
      HM5i/LGp/AcKISpdlR1dRMUL3JEksBDnRBqAqCz5NBgKH/c9ZjsYZDlLiI8lDaBMNE1D07Qf
      dPfPS50a/u6/f3wS+NP/AFaXPvUIcYnJxyYdra+vk0ql3vhYLBYjHA7/4NdNJpOnKU0IIeQM
      QE+RSASApaUlYrEYN2/epK6ujtnZWUKhEJ2dnWxubjI/P09PTw8ul4tgMEg6nWZoaIj9/X1e
      vHjBrVu3KBaLBINBent7sVqtGI1GgsEg4XCY/v5+mpqayvxuhRAXjZwB6CydTrO3t8eNGzdY
      XV1lY2ODfD7P8PAwxWKR+fl57t+/z8LCApFIBFVVaW1tZXV1lYmJCfr7+3n27BkzMzP09fVR
      U1PD9vY2qVQKr9dLb28vExMT5X6bQogLSM4AzoHX6z0xE7iurq60x99ut2O326mpqSGfz+Pz
      +bBarezv75NKpQiHw9TX19Pe3s7s7CwejweTyUShUGBmZoa6ujpJCQshfhA5A9CRyWTCaDRi
      MpkwGAylZPDk5CTPnz/HbrejaRpfffUV+Xwep9NZmiPscrnw+/0kk0lMJhMbGxsYjUby+Twm
      k6m0eHx4eChjJIUQP4gkgcugUHi9zdFkMqFpGrlcDovF8r1dPZqmUSgUSs87Sv4dPU9VVVRV
      vTRhsR+cBD7jXUCSBJY6Kr0OSQJfYMcP2AaD4a0/TEdnDW973qUcIn/tJx//U2my6VKKEJed
      NABRWQIDkgQW4pxIAxCVJZcCwwcuapsdkgAW4hSkAejohyR2i8UiRuP374Z2/LWOrv8dLQZf
      qmTws//x4Ung+/8ebG596xHiEpOPTzrRNI1QKMSXX37J1NQUqqq+9bnZbJZEIgHA5OTkG1/r
      66+/LgXL1tbWGB0dJZvNApDJZFhdXT37NyGEuNTkDEAnqqqyuLjI559/jqqq5PN5JicnKRaL
      DA0Nsb29TXt7O6urq8RiMYLBIIODg2xubnJ4eIjP56Ovrw+DwUA8Hufg4IBwOExtbS1Pnz6l
      vr6ecDhMoVDA4XBgtVrJ5XJMTU2hKAqdnZ1MTU1hs9m4c+dOVcwTEEJ8HDkD0ImiKFy7do3f
      /e53rK2tlQ7efr+fxcVFQqEQACsrKzQ1NdHT00NnZyeKojAwMMDW1lbp0s7Ozg7t7e3EYjFM
      JhMdHR3cunWL5eVl9vf3cblcbGxssLy8TG1tLb29vZhMJnp6ekilUuzs7JTzr0IIUaHkDEBH
      nZ2ddHZ28vjxYzweDy0tLVgsFhKJROluoJqmnQiM2e12nE5nae+/pmmlQfGJRIJIJILRaMRs
      NuP1erl9+zbFYhGAfD6P3+/H4XCwvLzM+vo62Wz2nZefhBDVSxqATorFIqOjo2QyGTRN48qV
      K0xOTqIoCjdu3CCRSPDVV1+xt7dHbW0tr169IhgMloIdR78eHh5SV1fHJ598ws7ODpFIBLPZ
      jKIopVDYUV7A7/czOTmJ1+stDZLPZrNvXFQWQghJAuvoeJLXYDCcmO+rqiqFQqF0oD8+B/g0
      jr/O0U6hi7I76KOTwDrtApIksNRR6XVIEvgCOJ7khZMJ4KNP8Me/PgvHX+dCLvx2/NsP/6k0
      23UtRYjLThqAqCz+W5IEFuKcSAMQlSWXBLLvf56lVlLAQpySNABRWZ79zw9LAksKWIhTkwag
      o/Hx8dI+/aGhobIvKgohxHHSAHQUj8f58Y9/jMViYX19nYODA6xWK7FYjFQqxfDwMJFIhM3N
      TaxWK3fu3GFhYYF4PE5/fz9zc3OYTCaGhoYuzT3/hRCVQy6i6iidTvPdd98xPz/PwsIC0WiU
      QCBAW1sbTqeT5eVlNjY26OjoKN06IpVKMTg4yMuXLzGbzRQKBcLhcLnfihDiEpKPlTqyWq10
      dXVht9s5ODigv7+fw8NDpqamsFqtOJ1OLBYLLpcLi8VCNpvF5XJhs9nIZrNEo1Hcbje1tbXl
      fitCiEtIGoCOHA4HXq8Xs9lcSu0qioKqqqRSKbxebynJa7FYcLvdzM3NEYvFCAQCbG1tkcvl
      JMkrhNCFJIHLoFgslprB39I0DVVVMRqNZ5YOvig+Kgms4y4gSQJLHZVehySBL7B3HdANBkPp
      8Us37/dDdP4MPqTfSQpYiFO7UGcAR5dOxOUUj8ex2+2n/lRzWpVyD6V8Pl8Rt/OQOiqvjqP7
      jJ22jgt1BqAoCk6ns9xlCJ1ks1mUuXmUd3wmMQX8WHt6dK1DLgFJHZVeh1wCAtbX17FYLDQ2
      NpJOp1ldXSUQCGA0GonFYjQ2NrK9vU1HR8eJ78tkMpjN5rJeWy8UChSLxdI/YLkPNpVi/3/9
      M8Z4/K2P13z2me4NQIhqcaEvMs/PzzMzMwPAwsICExMTpQPpzs4OmUyGra0tVFUlFArx4sUL
      crkcf/rTn5iYmCCZTOpa39zcHHt7e298bHd3l7W1NUKhELlcTtc6hBDiTS70GYDVakVVVZLJ
      JLFYDL/fXxqbeFwkEmF1dRWn08nKygpWqxWPx6P7teZsNsv+/j5Pnz5FVVV6enpobm7m22+/
      ZX9/n66uLhRFIZPJMDY2xv7+Pnfv3sXv9+talxBCwAU/AzAYDFy7do3Z2Vlqa2sxGAylMYrH
      7e7usre3RyKRAMDlctHQ0HAui42FQoH6+no+/fRT9vf32draorW1lXv37mEymUgkEiiKQl1d
      HVarla2tLd1rEkIIuOANAMDr9RIKhWhtbX3rcxoaGjAajXg8HjweD06nk9nZWd0vAR05GuEI
      rxvC0f7+I5FIhFQqRWtra3Vu/RRClMWFvgR09+5dLBYLX3zxRSl1e7R9LxAIYDKZGB4exmq1
      8tlnn1EoFHC73fh8Pnw+n+4r+Uef6q1WK2azGZ/PR2NjI9988w2aptHX14fFYsHr9bKxsUEy
      mfzegrUQQujlQjcAm80GULpXjt3+r+Ggo3WAo50+Ho/nxPfW19frXl97e/uJr69duwbAT37y
      E+Bk0OvBgweA7AYSQpyfC90ALqo3XeaRA/9rjf/wX7Ca3h5uMfy16QshTk8agKgoJp8PUwWE
      fYSoBrLiKCrK4dOnZF68KHcZQlQFaQA6U1UVVVXJ5/MnAl9v2q4qYP+f/4XU4z+VuwwhqoJc
      AtJROBxmfn4ep9NJQ0MDAF1dXQCsrKzQ0tJS9nuKCCGqlzQAnWiaxsLCAo8ePSrNBP76668J
      BoMMDg5yeHhIPB7n2bNnqKpKX18fBoOBYDCIw+Hg4cOHsjAshNCVXALSydHQF6vVWhr+cuPG
      DQYGBojH4yQSCXK5HH6/v5QSrq2tpb6+np2dHbk/kBBCd9IAdGI0GlEUhd3dXYrFIqqqnkgE
      Hzn+Z9PT07S3t+PxeGR9QAihO7kEpBODwcDQ0BATExMoikJnZydut7sUXjObzTgcDgAsFgs+
      n4+amhrm5uZwOBxVMwZSCFE+0gB05Ha7GRkZAU4GvY6nkuvq6gC4evUqmqbR09Mj9wMSQpwL
      aQA6+5iFXIPBUPULv/7/+g9Ya2rKXYYQVUEagKgoRq8Xo2yNFeJcyLUGUVFS33yLmk6Xuwwh
      qoI0gHMk6d/3i//L/0Y9OCh3GUJUBWkAOvrtb3/LzMwMuVyO0dFRNjc3S1PJhBCi3GQNQEdW
      q5Xt7W3a2trI5XLkcjkKhQKzs7OEw2E0TWNkZIQnT56QyWS4f/8+CwsLZDIZBgcH8fl85X4L
      QohLTM4AdGQymejo6CAYDAKQTqdJpVK8evWKn/3sZ9jtdnZ2dshms3g8HkKhEK9evWJgYKC0
      PVQIIfQiZwA6a25uZmlpCXi9519RFFKpFAcHB6TTaRRFwW6309XVhdVqJZVKUV9fX/XbQYUQ
      +pMzAB01NTVhNpsZGBjA7XaXBtIPDQ0xOzvL4eEhTU1NOBwOFhYWyOfztLS0yMFfCHEu5AxA
      Rz09PQD4/X78fj/weifQ0tIShUKhNBT+/v37AKVh9kIIcR4MmuxLPHeqqlIsFjGZTPJp/5ho
      NIpDVbH7fBjKeC+kXC6H2Wwu+79NNputiHkRUkfl1aFpGvl8HovFcqrXkTOAMlAURe738xZG
      t7usB38hqokchURFST35WpLAQpwTaQDn6GOSwNWaGo7/n/8rSWAhzok0AB395je/YXp6+gcl
      gQ8ODtjc3NS5QiFENZM1AB0dBb2uXLlyIgk8MzNTSgI/evSIv/zlL2QyGT799FNevHhBJpOh
      vb0dk8nE8vJyaU7wyMhI2RcmhRCXh5wB6MhoNNLR0cHCwgLwr0ngSCTCz3/+cxwOR2n+r9fr
      JRQKEYlEGBwcxOl0kslkqK2txefz8erVK5kTLIQ4U9IAdNbc3Ew8HieVSgGcSAIfHh6iKAoO
      h4Pu7m66u7vxeDz4fL7SJ/3p6Wm6urpkTrAQ4sxJA9BRc3NzKQns9Xrxer24XC6Gh4eZnZ0l
      k8mUksAvXrwgl8uVksAOhwOv10tbWxvT09PU1tbKnGAhxJmSNQAddXd3A9DY2EhjYyPwenfP
      4uIi+Xy+lAT+0Y9+BJxMArtcLlwuF4FAgJ6eHrn2L4Q4c5IELgNVVVFVFaPRKAf2Y6LRKA5N
      w17nw2As38mpJIGljkqvQ5LAF5gkgd/O6HKV9eAvRDWR/9NERckuh8pdghBVQxqAjjRNo1Ao
      vPM5qVRKdvcckxkfL3cJQlQNaQA6UVWVb7/9lidPnjA2NkaxWHzj8yYmJt76mBBC6EnWAHSi
      aRp7e3sMDg7i9/uJRqOk02nsdnspEPby5UtisRjXr1/n2bNnZDIZRkZGePr0KQAWi4VHjx6V
      fTFSCHE5yRmAThRF4cGDBwSDQR4/fkwmkyGTyZDP50kkEqW5wC0tLVgsFurq6jAYDEQiEYxG
      Iz/96U8xGAyoqlrutyKEuKSkAejk6MD98OHDUvr3aOuWpmmk02k0TUNVVdbW1qipqaG9vR14
      3TyOtojK+oAQQi9yCUhHR/f2aWhooK2tjWfPnlEoFOjv78dqtfL48WMcDgeBQICpqSnMZjN+
      v5+WlhbgdZJYtosKIfQiQTAdHf+rPf5p/uj3mqZhMBi+91i1ikajqP/v9zT+/d+VtQ4Jgkkd
      lV6HBMEugL89gBz/+ujA/7bnVivnF78sdwlCVA25viAqilIBn/CEqBbSAERFyS4tl7sEIaqG
      NIAyUlWVw8PDqp3/+yaZiYlylyBE1ZAGoKNf//rXTE5OAjA/P8+vfvWrE4+n02nm5uZIJpNs
      bGyUo0QhRBWTRWAd1dTUvN7Zoqpsbm6Wxj4uLCxgsVi4d+8exWKRXC5HJpMpd7lCiCojZwA6
      MplMeDwelpeXqampwWw2U1tbi8fjIRqNks1mASgUCtIAhBDnThqAzgKBAPPz8zQ0NACvZ/z2
      9/fj8/nKXJkQotrJJSAdtbS0UF9fT0tLCy0tLaWF3omJCWpqarDZbPj9fhwOhzQEIcS5kwag
      o66uLgCGh4dLX2uaRmdnZyn4VVNTA4DT6SxPkUKIqiUN4JxJ4vfdXP/ui3KXIETVkDUAUVEM
      p7y3iRDiw0kDEEKIKiUNQEcfMhP4Y+TzedkuKoQ4M7IGoBNVVfnmm28oFAo4HA6GhoYwGo2n
      es3d3V329/fp6+s7oyqFENVMGoBONE0jHo8zMDBAU1MTiUSCL7/8EkVRuHPnDuPj4xgMBnp7
      eykWi8zPz+Pz+bh37x5Pnjwhm80SCARwuVwEg0FsNht9fX1yzyAhxJmRBqATRVEYGRnh+fPn
      zM7O4vP5sNvtaJrG6uoqV65c4erVqywtLbG6ukpHRwehUIiVlRUCgQDNzc2srKyUksPr6+vk
      crlyvy0hxCUiawA6UVWVYrHIw4cPMZlM5PN53G43d+7coa2tDUVRSkNhjgJhDx48oKamhkgk
      QiKRIJ/PMzMzw82bN6mrqyv3WxJCXDLSAHS0urrKH/7wB+rr6xkYGCCTyfDixQssFgv19fVY
      rVYaGxsZHh5mbm6OjY0NAoEAgUCAxcVFFEWhvb2d8fFxnE4nLpdLGoEQ4szITGAdvWsm8Nue
      e3h4yNjYGAaDgVu3buH1et/6PZdNNBrF6XSWfd6qzASWOiq9DpkJfAG8aybw257rcDgYGRkB
      Xq8jCCGEXqQBVJi/HRYvhBB6+f/4HHS5ed1bygAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Top-10 emission amount crops' width='384'>
      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
      iQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Top-10 emission amount livestock' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Total food production by category' width='384'>
      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
      hfT19WX2t/5/VVUpKSnh29/+NiMjI+Tm5tLd3c2FCxdIp9OUlpby9ttvc/PmTcrLyzNjuHtc
      xcXFvPPOO3R3d1NaWrrpNklTUxPvvfce586dQ9O0Tfuor68nEolgs9kyP9O0tZNsIBDg0qVL
      hEKhzKJwkUiE3t7erP1l9Mxo/O7pJb55M0xLsYNin8rvv7f2PKAkoHJrJklriYM8j8K3usLk
      uZ/8IJcgCE+uByaBLcsimUxit9sfmBpdfzi6fk9/fX69rusoirLtxKllWQwMDJBMJpmcnORT
      n/pUphm73W7PJO9UVX3gPh+2nWVZ6LqeOdFvlE6nkWUZWZYz419fT0jX9czVyP2YpslX3/3K
      Y80C0g0L07JwqGvHjGoGTlVGVSRMy0JCwsJCNz7YZt12ZwGJJHD2iXFm114Y535IAj9xS0Ho
      us7KygrBYPCBC7k9iUzT5Pzo+ywlwnhdTQ/d3psO07F6NWvHXzQDnE22Z74vyvXy0pGqe7YT
      BSD7xDizay+MUxQAYRPREzj79sKJAMQ4s20vjHM/FIAn+0y1B5mWSdq8t3OXhIVs7byj13YY
      yKwnjyVAUfbWlZMgCD8cogBk2X89+8fMJCvu+XlJYoqfHfu9e36+9QXYw5O/635t9Yv06Wu3
      eg7XFvIfv/TqI4xcEISDRhQA1m6JTE1NUV1d/aEe1zAt3u2PMryY4iPNXlZiBlcmEjQU2Gku
      dvJmd5hPtPlwKBLhpElj0ZN/qSkIwt4hCgBrs5gmJiYoLS3l2rVrSJJEe3s7Q0NDLC8vc/To
      UVwuF9euXUNRFNra2piYmGB+fp729nby8/Mf6bj9cxpRzeRnn8vDMC3e7IrwC6fy+POLq4yv
      6ByrcHFpLI5lwasi+SsIQpaJm8UbSJJEQ0MDdrud7u5uVlZWaG1tpbu7G0mSaGpqyjSDv337
      Nq2trQwNDT3y8aZWdc6Pxvnq2wt03U6S71H4t383y0rcoC5o5x86w8xtSP7eDonkryAI2SMK
      AGuzdwzDYHl5mfPnz2eWuvD7/eTm5t7zWjqdzvQcfpxP5AGXwmc7/PzcC3lcHIsTT5n8zo+V
      UJm7lvz95Q3J34+1+BgQyV9BELLowBeAiYkJzpw5g8/nwzTNTPpXlmVGR0c5c+YMeXl5mbDb
      +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
      sFgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Total food production by country (all items)' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
